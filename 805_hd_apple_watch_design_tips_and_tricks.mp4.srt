WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:29.171 --> 00:00:31.171 A:middle
[Applause]

00:00:31.326 --> 00:00:32.066 A:middle
&gt;&gt; MIKE STERN: Hello, everyone.

00:00:35.606 --> 00:00:36.656 A:middle
My name is Mike Stern.

00:00:36.656 --> 00:00:38.956 A:middle
I am a User Experience
Evangelist at Apple,

00:00:38.956 --> 00:00:40.646 A:middle
and it's a pleasure to
be with you here today.

00:00:41.436 --> 00:00:44.576 A:middle
So today's session is about
designing for Apple Watch,

00:00:44.576 --> 00:00:46.886 A:middle
and in particular we are going
to talk about tips and tricks

00:00:46.886 --> 00:00:48.476 A:middle
about how you can do that.

00:00:49.236 --> 00:00:51.246 A:middle
Now, on Wednesday I
gave a different talk

00:00:51.486 --> 00:00:56.086 A:middle
on the same topic, but it had a
bit of a different nature to it.

00:00:56.086 --> 00:01:00.036 A:middle
And for those of you who weren't
here for that, it's okay.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:00:56.086 --> 00:01:00.036 A:middle
And for those of you who weren't
here for that, it's okay.

00:01:00.306 --> 00:01:01.336 A:middle
I'm not totally hurt.

00:01:01.936 --> 00:01:04.825 A:middle
But I do want to bring you
up to speed a little bit.

00:01:05.325 --> 00:01:07.956 A:middle
So there were three key
themes for that presentation

00:01:07.956 --> 00:01:09.396 A:middle
that I'll review very briefly.

00:01:09.956 --> 00:01:13.946 A:middle
Those three themes were Personal
Communication, Holistic Design,

00:01:13.986 --> 00:01:15.496 A:middle
and Lightweight Interaction.

00:01:16.676 --> 00:01:19.516 A:middle
Personal Communication
involves taking what we know

00:01:19.516 --> 00:01:23.116 A:middle
about positive and effective
interpersonal communication

00:01:23.566 --> 00:01:25.016 A:middle
and using that as a model

00:01:25.016 --> 00:01:27.606 A:middle
for how we design
apps for Apple Watch.

00:01:28.936 --> 00:01:32.456 A:middle
Now, interactions on Apple
Watch create a more intimate

00:01:32.456 --> 00:01:36.006 A:middle
and personal experience with
technology, and it's important

00:01:36.006 --> 00:01:39.776 A:middle
that the apps that you design
for Apple Watch take advantage

00:01:39.776 --> 00:01:44.136 A:middle
of that and feel more
intimate and personal as well.

00:01:44.336 --> 00:01:46.756 A:middle
Holistic Design is about
blurring the boundary

00:01:46.756 --> 00:01:49.536 A:middle
between software and
hardware, and that could be

00:01:49.586 --> 00:01:52.116 A:middle
through the visual design
of your app's interface

00:01:52.116 --> 00:01:54.246 A:middle
and allowing it to
seamlessly blend

00:01:54.246 --> 00:01:55.716 A:middle
in with the Apple Watch bezel.

00:01:56.926 --> 00:01:58.866 A:middle
It's about harnessing
the capabilities

00:01:58.866 --> 00:02:01.476 A:middle
of the Force Touch display
and using it properly.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:01:58.866 --> 00:02:01.476 A:middle
of the Force Touch display
and using it properly.

00:02:02.096 --> 00:02:04.746 A:middle
Same thing with the
Digital Crown.

00:02:05.326 --> 00:02:09.196 A:middle
And the Taptic Engine,
especially now

00:02:09.196 --> 00:02:10.455 A:middle
that we have haptic feedback.

00:02:11.526 --> 00:02:14.136 A:middle
You can use these things
to create a more immersive,

00:02:14.136 --> 00:02:16.716 A:middle
sophisticated, and
nuanced experience

00:02:16.806 --> 00:02:18.746 A:middle
for the people who
use your apps.

00:02:20.156 --> 00:02:24.076 A:middle
And Lightweight Interaction is
about designing for quick looks

00:02:24.076 --> 00:02:25.536 A:middle
and fast interactions.

00:02:26.176 --> 00:02:27.406 A:middle
It's about taking advantage

00:02:27.406 --> 00:02:30.496 A:middle
of the Watch's unique
position on the user's wrist.

00:02:31.036 --> 00:02:35.496 A:middle
So together, these three
themes are the foundation upon

00:02:35.496 --> 00:02:39.036 A:middle
which you can design really
great apps, notifications,

00:02:39.036 --> 00:02:40.736 A:middle
and glances for Apple Watch.

00:02:41.396 --> 00:02:44.076 A:middle
And everything we are going
to talk about today relates

00:02:44.076 --> 00:02:47.296 A:middle
in some way, some shape or
form, to these three themes.

00:02:48.066 --> 00:02:49.936 A:middle
But this talk is a
little bit different.

00:02:51.366 --> 00:02:53.576 A:middle
Now, in today's presentation,
we are just not going

00:02:53.576 --> 00:02:55.686 A:middle
to recycle the things that
we talked about earlier;

00:02:55.686 --> 00:02:58.836 A:middle
we are going to get down to the
specifics, the nuts and bolts,

00:02:58.836 --> 00:03:00.526 A:middle
the brass tacks about how

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:02:58.836 --> 00:03:00.526 A:middle
the brass tacks about how

00:03:00.526 --> 00:03:02.926 A:middle
to make really great
Apple Watch apps,

00:03:02.926 --> 00:03:04.746 A:middle
notifications, and glances.

00:03:05.836 --> 00:03:07.536 A:middle
And we are going to
do that by talking

00:03:07.536 --> 00:03:11.526 A:middle
about the top 10 common pitfalls
that we've seen developers run

00:03:11.526 --> 00:03:13.566 A:middle
into when designing
for Apple Watch.

00:03:14.476 --> 00:03:18.796 A:middle
Now, Apple Watch is a new
type of device for Apple,

00:03:18.796 --> 00:03:22.206 A:middle
and you know, even for someone
like me, I've never designed

00:03:22.206 --> 00:03:23.986 A:middle
for a wearable device, so a lot

00:03:23.986 --> 00:03:26.186 A:middle
of things are a little bit
counterintuitive or new.

00:03:26.796 --> 00:03:28.866 A:middle
So we see these kind
of common missteps.

00:03:29.396 --> 00:03:31.586 A:middle
So there's no issue with
that, but we want to talk

00:03:31.586 --> 00:03:33.376 A:middle
about these things we've
learned along the way.

00:03:33.986 --> 00:03:35.286 A:middle
Does that sound like
a good thing?

00:03:35.286 --> 00:03:38.076 A:middle
Are you guys on board with that?

00:03:38.076 --> 00:03:38.276 A:middle
[Applause] Yeah?

00:03:38.276 --> 00:03:39.146 A:middle
All right.

00:03:40.086 --> 00:03:41.446 A:middle
Cool. Great.

00:03:41.446 --> 00:03:43.476 A:middle
I am really fired up
to talk about this,

00:03:43.476 --> 00:03:44.656 A:middle
so without further ado,

00:03:44.986 --> 00:03:48.576 A:middle
let's get into the number one
common pitfall, and that's --

00:03:52.276 --> 00:03:55.486 A:middle
[Laughter] -- and that is not
a very good user experience.

00:03:56.286 --> 00:04:00.716 A:middle
The number one common pitfall
that we've seen are slow apps.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:03:56.286 --> 00:04:00.716 A:middle
The number one common pitfall
that we've seen are slow apps.

00:04:01.786 --> 00:04:04.146 A:middle
Apple Watch is all
about convenience,

00:04:04.676 --> 00:04:08.406 A:middle
so if your app takes too long
to install, or it takes too long

00:04:08.406 --> 00:04:10.996 A:middle
to launch, or pages
take too long to load,

00:04:11.396 --> 00:04:13.836 A:middle
that's not very convenient
for people at all; right?

00:04:15.166 --> 00:04:16.596 A:middle
The design of your app's UI

00:04:17.216 --> 00:04:20.685 A:middle
and how you produce graphics
can have a huge impact

00:04:20.685 --> 00:04:22.536 A:middle
on the performance of your app.

00:04:22.936 --> 00:04:24.786 A:middle
You want to design
for performance.

00:04:25.786 --> 00:04:27.936 A:middle
So whenever possible,
for example,

00:04:28.576 --> 00:04:30.696 A:middle
you want to use progressive
loading of pages,

00:04:31.316 --> 00:04:34.076 A:middle
and that simply means that you
don't need to make people wait

00:04:34.076 --> 00:04:36.416 A:middle
for all of the content
to be ready to display

00:04:36.416 --> 00:04:39.166 A:middle
on a page before you let
them go to that page.

00:04:39.166 --> 00:04:41.876 A:middle
You can bring them to the
page, show a few things,

00:04:41.876 --> 00:04:44.766 A:middle
and then show the rest of the
stuff as it becomes available.

00:04:46.136 --> 00:04:47.966 A:middle
You know, seeing this
is pretty disappointing.

00:04:48.626 --> 00:04:49.606 A:middle
We want to avoid this.

00:04:49.606 --> 00:04:52.316 A:middle
When someone taps a button to
load a new page or they swipe

00:04:52.316 --> 00:04:54.936 A:middle
to it, they should get
to that page immediately.

00:04:55.226 --> 00:04:56.846 A:middle
It's a reasonable expectation.

00:04:57.956 --> 00:04:59.146 A:middle
So let's look at an example.

00:04:59.316 --> 00:05:00.296 A:middle
Let's say we have an app

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:04:59.316 --> 00:05:00.296 A:middle
Let's say we have an app

00:05:00.366 --> 00:05:04.396 A:middle
that simply lists nearby
Apple retail locations.

00:05:05.286 --> 00:05:08.426 A:middle
Now, on this screen, we have
a list of all those stores,

00:05:08.426 --> 00:05:10.486 A:middle
we have the store name,
we have the address,

00:05:10.806 --> 00:05:13.266 A:middle
and we have the distance
from our current location.

00:05:14.086 --> 00:05:16.506 A:middle
Now, all of this information
is going to be present

00:05:16.756 --> 00:05:20.096 A:middle
on the detail screen for each of
these stores, so we have a lot

00:05:20.096 --> 00:05:23.146 A:middle
of data that's already ready
and stored locally on the watch.

00:05:24.136 --> 00:05:26.456 A:middle
So when we go to that page,
we already have a bunch

00:05:26.456 --> 00:05:27.556 A:middle
of content to display.

00:05:28.406 --> 00:05:31.346 A:middle
Other things, like the store
hours or maybe a description

00:05:31.346 --> 00:05:33.986 A:middle
about how to get to the store,
it's all text and it's going

00:05:33.986 --> 00:05:34.896 A:middle
to load pretty quickly.

00:05:35.756 --> 00:05:38.856 A:middle
Now, perhaps there's also
a photo of this store.

00:05:39.626 --> 00:05:41.486 A:middle
We didn't need to
make users wait

00:05:41.486 --> 00:05:45.996 A:middle
around until we had the photo on
the Watch just to draw the page.

00:05:46.846 --> 00:05:48.426 A:middle
In fact, it's better
to let people go

00:05:48.426 --> 00:05:51.986 A:middle
to the detail page first so they
could see specifically what it

00:05:51.986 --> 00:05:53.726 A:middle
is that they would
have been waiting for.

00:05:54.656 --> 00:05:57.506 A:middle
I mean, by showing
a photo label,

00:05:57.506 --> 00:06:00.766 A:middle
these labels here make it very
specific about what remains

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:05:57.506 --> 00:06:00.766 A:middle
these labels here make it very
specific about what remains

00:06:00.766 --> 00:06:02.216 A:middle
to be loaded into the page.

00:06:02.696 --> 00:06:05.166 A:middle
And people might not be
interested in looking at photos

00:06:05.166 --> 00:06:07.286 A:middle
at all of the store,
and if that's the case,

00:06:07.336 --> 00:06:10.036 A:middle
they have access to the other
information on the page.

00:06:10.196 --> 00:06:11.516 A:middle
They can get that
and then leave.

00:06:12.086 --> 00:06:15.306 A:middle
Now, if you use progressive
loading like this,

00:06:15.806 --> 00:06:18.006 A:middle
you want to make sure that
you hold open the space

00:06:18.006 --> 00:06:19.676 A:middle
for the things that
will eventually load

00:06:19.676 --> 00:06:22.046 A:middle
in by using placeholder
graphics.

00:06:22.656 --> 00:06:25.596 A:middle
The reason for that is when
things eventually draw in,

00:06:25.596 --> 00:06:27.806 A:middle
you don't want the height
of the page to change

00:06:28.226 --> 00:06:31.206 A:middle
because if you were looking at
something like below the photo,

00:06:31.316 --> 00:06:33.626 A:middle
all of a sudden it
would jump out of view.

00:06:33.626 --> 00:06:35.726 A:middle
It actually, I guess,
would go down lower.

00:06:35.726 --> 00:06:38.236 A:middle
And that's very disorienting,
so you've got

00:06:38.236 --> 00:06:40.356 A:middle
to hold the space open.

00:06:40.566 --> 00:06:42.636 A:middle
Now, if you use this
technique, you should also think

00:06:42.636 --> 00:06:45.216 A:middle
about the way that you've
ordered content onto the page.

00:06:45.786 --> 00:06:48.456 A:middle
You want to put things that
are likely to take longer

00:06:48.456 --> 00:06:50.656 A:middle
to load further down
on the page.

00:06:51.746 --> 00:06:55.156 A:middle
So with that photo offscreen,
there's going to be more time

00:06:55.466 --> 00:06:59.066 A:middle
for it to load in before the
user actually scrolls to see it.

00:06:59.666 --> 00:07:02.556 A:middle
They may never realize that
it wasn't present onscreen

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:06:59.666 --> 00:07:02.556 A:middle
They may never realize that
it wasn't present onscreen

00:07:02.556 --> 00:07:06.306 A:middle
when they had first
gotten to this page.

00:07:06.506 --> 00:07:08.796 A:middle
Now the next way to
design for performance is

00:07:08.826 --> 00:07:10.516 A:middle
to optimize your graphics.

00:07:11.166 --> 00:07:13.596 A:middle
And the best way to do that
is through compression.

00:07:14.526 --> 00:07:16.896 A:middle
When you are producing
graphics, it's important

00:07:16.896 --> 00:07:20.646 A:middle
to pick the right compressions
type and use the right settings.

00:07:21.496 --> 00:07:22.936 A:middle
So for example, with photos,

00:07:22.936 --> 00:07:24.616 A:middle
most of the time you
are going to use JPEG.

00:07:25.276 --> 00:07:27.466 A:middle
JPEG is what we call
a lossy format,

00:07:27.466 --> 00:07:30.146 A:middle
meaning whenever you save
a JPEG, there's some loss

00:07:30.226 --> 00:07:33.256 A:middle
to the visual quality or
fidelity of the image.

00:07:34.076 --> 00:07:35.956 A:middle
But with moderate
compression, that's okay.

00:07:35.956 --> 00:07:39.146 A:middle
It may not really affect the
perceived quality of the image.

00:07:40.246 --> 00:07:42.226 A:middle
Let's say we are going to
compress this photo here.

00:07:42.396 --> 00:07:45.376 A:middle
It's kind of blown up, so
it looks a little pixilated.

00:07:45.776 --> 00:07:47.296 A:middle
Let's compress this photo.

00:07:48.326 --> 00:07:50.356 A:middle
At the highest quality
setting for JPEG,

00:07:50.356 --> 00:07:53.126 A:middle
it's going to take about 125 K.

00:07:54.076 --> 00:07:57.846 A:middle
As we lower the quality setting,
we see that the file size starts

00:07:57.886 --> 00:07:59.586 A:middle
to drop off pretty dramatically.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:00.046 --> 00:08:02.456 A:middle
At the highest compression
setting,

00:08:02.456 --> 00:08:05.356 A:middle
the lowest quality setting,
it's just about 25 K,

00:08:05.356 --> 00:08:08.016 A:middle
or about 20 percent of
the highest-quality image.

00:08:08.586 --> 00:08:11.636 A:middle
That's a pretty big file
size savings, but it's going

00:08:11.636 --> 00:08:13.056 A:middle
to look pretty terrible there.

00:08:13.426 --> 00:08:14.946 A:middle
Usually when you are
compressing JPEGs,

00:08:14.946 --> 00:08:16.886 A:middle
you want to find
somewhere in the middle.

00:08:17.766 --> 00:08:19.536 A:middle
As you can see, we
sort of hit a point

00:08:19.536 --> 00:08:20.956 A:middle
of diminishing returns anyway.

00:08:21.956 --> 00:08:24.696 A:middle
So let's look at how these
compare side by side.

00:08:25.406 --> 00:08:27.926 A:middle
It's pretty hard to tell that
there's actually any difference

00:08:27.926 --> 00:08:29.496 A:middle
in quality whatsoever, and

00:08:29.496 --> 00:08:31.846 A:middle
yet we've saved two-thirds
of the file size.

00:08:32.676 --> 00:08:35.666 A:middle
You can only really see those
visual artifacts of compression

00:08:36.116 --> 00:08:37.586 A:middle
when you look up close.

00:08:38.306 --> 00:08:41.135 A:middle
But that's not how people
experience these images.

00:08:41.135 --> 00:08:42.395 A:middle
That's not how we take them in.

00:08:42.905 --> 00:08:45.896 A:middle
They look at it on a very
high-resolution Retina display

00:08:46.356 --> 00:08:48.906 A:middle
on a device that is kind
of constantly moving

00:08:48.906 --> 00:08:51.136 A:middle
around a little bit because
it's strapped to their wrist.

00:08:51.596 --> 00:08:53.776 A:middle
So it's hard for people
to see those artifacts.

00:08:54.846 --> 00:08:56.486 A:middle
Next, let's talk about PNGs.

00:08:57.646 --> 00:09:00.596 A:middle
Now, PNGs are basically the
way most other graphics other

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:08:57.646 --> 00:09:00.596 A:middle
Now, PNGs are basically the
way most other graphics other

00:09:00.596 --> 00:09:04.616 A:middle
than photos are displayed on
most apps, and by default,

00:09:04.616 --> 00:09:08.426 A:middle
PNGs use a 24-bit color
palette, which basically means

00:09:08.426 --> 00:09:10.776 A:middle
that there's millions of colors
that are at your disposal

00:09:10.776 --> 00:09:12.546 A:middle
for drawing the artwork
in the graphic.

00:09:13.536 --> 00:09:16.946 A:middle
But for most graphics like this
icon, that's way more color

00:09:16.946 --> 00:09:18.136 A:middle
than you actually need.

00:09:19.256 --> 00:09:21.266 A:middle
So when you save out your
PNGs, you should be aware

00:09:21.266 --> 00:09:23.626 A:middle
that there's also an 8-bit
color palette setting

00:09:24.026 --> 00:09:24.906 A:middle
that you can use.

00:09:25.886 --> 00:09:29.766 A:middle
That just means that you
have 256 colors or less

00:09:30.106 --> 00:09:32.566 A:middle
to draw your images,
but for this graphic,

00:09:32.566 --> 00:09:33.496 A:middle
it's more than enough.

00:09:33.496 --> 00:09:37.776 A:middle
In fact, it's only at around
200 colors or less that we start

00:09:37.776 --> 00:09:40.896 A:middle
to notice any kind of dithering
or posterization of our artwork.

00:09:41.606 --> 00:09:42.956 A:middle
You want to be really frugal

00:09:42.956 --> 00:09:46.156 A:middle
with file-size settings
by using 8-bit pings.

00:09:47.176 --> 00:09:50.246 A:middle
As you can see here, the
file size savings are

00:09:50.246 --> 00:09:51.366 A:middle
really tremendous.

00:09:51.866 --> 00:09:54.746 A:middle
It's almost a tenfold
decrease in file size.

00:09:55.556 --> 00:09:59.026 A:middle
Again, there's no discernible
difference in quality.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:00.126 --> 00:10:02.006 A:middle
When your app has
a lot of graphics,

00:10:02.006 --> 00:10:05.026 A:middle
the overall file size savings
can be really tremendous,

00:10:05.426 --> 00:10:08.156 A:middle
especially when you have image
sequences for animations.

00:10:08.546 --> 00:10:11.986 A:middle
It can lead to significantly
smaller sizes for your apps.

00:10:12.316 --> 00:10:14.806 A:middle
So it's important to take
this stuff seriously.

00:10:16.186 --> 00:10:18.736 A:middle
Now, next you want to
avoid using transparency

00:10:18.736 --> 00:10:19.986 A:middle
when it isn't necessary.

00:10:20.336 --> 00:10:22.346 A:middle
Transparency requires
alpha channels,

00:10:22.346 --> 00:10:24.676 A:middle
and alpha channels
take up file size.

00:10:25.086 --> 00:10:26.986 A:middle
So avoid those unless
you actually need it.

00:10:27.506 --> 00:10:29.606 A:middle
Now, sometimes you
do need transparency.

00:10:29.956 --> 00:10:32.616 A:middle
For example, this graphic
for the Weather glance,

00:10:32.936 --> 00:10:36.856 A:middle
it's composited against a
translucent dark background

00:10:36.916 --> 00:10:39.106 A:middle
that blurs the watch
face behind it.

00:10:39.676 --> 00:10:41.636 A:middle
Because of that, you
need transparency to let

00:10:41.636 --> 00:10:43.396 A:middle
that color information
come through.

00:10:44.176 --> 00:10:47.306 A:middle
But a similar icon for the
Weather app doesn't need it.

00:10:47.306 --> 00:10:50.126 A:middle
It's always composited
against a black background.

00:10:50.916 --> 00:10:54.096 A:middle
So we can just assume and bake
in that black matte background

00:10:54.096 --> 00:10:57.296 A:middle
and not have an alpha
channel at all.

00:10:57.526 --> 00:11:00.336 A:middle
Okay. Now, the last
main technique

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:10:57.526 --> 00:11:00.336 A:middle
Okay. Now, the last
main technique

00:11:00.446 --> 00:11:03.486 A:middle
for optimizing graphics
is to just make graphics

00:11:03.486 --> 00:11:05.656 A:middle
at the size you actually
need them.

00:11:06.156 --> 00:11:08.286 A:middle
And this is especially
true when you are sending

00:11:08.286 --> 00:11:10.036 A:middle
over graphics at runtime.

00:11:10.586 --> 00:11:14.206 A:middle
There is no sense in sending
over a larger graphic or video

00:11:14.206 --> 00:11:17.346 A:middle
than what you actually need
to display on the Watch,

00:11:17.996 --> 00:11:20.886 A:middle
and that's especially true if
portions of it are just going

00:11:20.886 --> 00:11:22.366 A:middle
to get cropped out anyway.

00:11:22.836 --> 00:11:25.276 A:middle
So make sure images and
videos are the right size.

00:11:26.286 --> 00:11:27.336 A:middle
Okay. So designing

00:11:27.336 --> 00:11:30.016 A:middle
for performance means
progressively loading content

00:11:30.016 --> 00:11:30.486 A:middle
on pages.

00:11:30.486 --> 00:11:32.106 A:middle
It means ordering things

00:11:32.106 --> 00:11:35.006 A:middle
so people don't realize you are
progressively loading content,

00:11:35.316 --> 00:11:38.546 A:middle
and optimizing graphics through
compression, no transparency,

00:11:38.676 --> 00:11:41.726 A:middle
and using the correctly
sized graphics.

00:11:42.246 --> 00:11:43.536 A:middle
Now, for more information,

00:11:43.536 --> 00:11:45.506 A:middle
I recommend watching the
video for this session.

00:11:45.926 --> 00:11:48.516 A:middle
There's lot of great, a little
bit more engineering-focused

00:11:48.516 --> 00:11:51.376 A:middle
tips and tricks about how
to optimize for performance.

00:11:52.456 --> 00:11:55.016 A:middle
Now, there's another
really good technique

00:11:55.496 --> 00:11:57.956 A:middle
for optimizing the
performance of your apps,

00:11:58.626 --> 00:12:00.976 A:middle
and I'd like to share
it with you now.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:11:58.626 --> 00:12:00.976 A:middle
and I'd like to share
it with you now.

00:12:00.976 --> 00:12:02.646 A:middle
It's a really, really good one,

00:12:03.046 --> 00:12:06.566 A:middle
and it involves not
making complex apps.

00:12:07.246 --> 00:12:08.506 A:middle
Common pitfall number two.

00:12:09.466 --> 00:12:11.796 A:middle
Now, a little bit earlier
I said I wasn't just going

00:12:11.796 --> 00:12:13.846 A:middle
to recycle content from
my earlier presentation.

00:12:13.846 --> 00:12:15.766 A:middle
That's a little bit of a fib

00:12:15.766 --> 00:12:17.216 A:middle
because I am going
to do that a bit.

00:12:17.546 --> 00:12:20.806 A:middle
Apple Watch is not
a miniature iPhone.

00:12:20.806 --> 00:12:23.746 A:middle
This is so important that
I want to say this twice.

00:12:24.296 --> 00:12:27.486 A:middle
We've seen developers do this
time and time again, and again,

00:12:27.486 --> 00:12:29.936 A:middle
it's a natural thing to
try to take our assumptions

00:12:29.936 --> 00:12:33.066 A:middle
and processes for making
apps from iPhone and apply it

00:12:33.066 --> 00:12:36.746 A:middle
to Watch, but it winds up with
apps that are difficult to use

00:12:36.746 --> 00:12:37.926 A:middle
and difficult to navigate.

00:12:38.666 --> 00:12:42.076 A:middle
Apple Watch is ideally
suited for quick looks,

00:12:42.076 --> 00:12:45.546 A:middle
for convenience, and
brief interactions.

00:12:46.276 --> 00:12:50.316 A:middle
So what information and actions
do people really want quick

00:12:50.316 --> 00:12:53.836 A:middle
access and convenient
access to from your iOS app?

00:12:54.986 --> 00:12:57.116 A:middle
Make sure that you
focus on the essentials.

00:12:57.116 --> 00:12:59.426 A:middle
Don't overload your app
with too much information

00:12:59.426 --> 00:13:00.286 A:middle
or functionality.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:12:59.426 --> 00:13:00.286 A:middle
or functionality.

00:13:01.096 --> 00:13:04.816 A:middle
This is really a recipe for
poor usability on Apple Watch.

00:13:05.536 --> 00:13:09.576 A:middle
So for example, the Calendar
app on the iPhone does all sorts

00:13:09.576 --> 00:13:12.036 A:middle
of things that the Apple
Watch Xalendar app does not.

00:13:13.366 --> 00:13:15.996 A:middle
You can't search in the
Calendar app on Apple Watch.

00:13:16.726 --> 00:13:17.446 A:middle
You can't add events.

00:13:17.446 --> 00:13:19.946 A:middle
You can't manage your calendars.

00:13:20.726 --> 00:13:23.316 A:middle
And you can't see nearly
as far into the future

00:13:24.186 --> 00:13:25.686 A:middle
or into the past at all.

00:13:26.536 --> 00:13:30.006 A:middle
Calendar on Apple Watch
is just a small subset

00:13:30.006 --> 00:13:32.676 A:middle
of the overall functionality of
what you can do on the iPhone,

00:13:32.676 --> 00:13:35.416 A:middle
but it's the things that
make sense for the Watch.

00:13:36.176 --> 00:13:38.306 A:middle
Right? You can check your
calendar, what's going on today

00:13:38.306 --> 00:13:40.606 A:middle
and what's happening
in the next few days.

00:13:40.636 --> 00:13:42.796 A:middle
You can get a little
bit of detail about each

00:13:42.796 --> 00:13:43.986 A:middle
of the events in your calendar.

00:13:44.316 --> 00:13:46.076 A:middle
You can accept, you can
decline invitations,

00:13:46.076 --> 00:13:48.526 A:middle
you can contact the organizer
in case you are running late

00:13:48.926 --> 00:13:50.376 A:middle
or you need to cancel
the meeting.

00:13:51.316 --> 00:13:53.746 A:middle
This is the things that
make sense on the Watch.

00:13:54.236 --> 00:13:56.526 A:middle
Not all of the other stuff
that you can do on your iPhone.

00:13:57.506 --> 00:14:01.286 A:middle
Apple Watch apps should
complement your iPhone app.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:13:57.506 --> 00:14:01.286 A:middle
Apple Watch apps should
complement your iPhone app.

00:14:01.286 --> 00:14:02.916 A:middle
As we just saw with
Calendar, that could be

00:14:02.916 --> 00:14:05.856 A:middle
by providing a small subset
of the overall functionality

00:14:05.906 --> 00:14:07.636 A:middle
from your iPhone on Apple Watch,

00:14:08.226 --> 00:14:12.356 A:middle
or it could be extending the
capabilities of your iOS app.

00:14:13.316 --> 00:14:15.686 A:middle
So for example, the Camera app

00:14:16.426 --> 00:14:20.206 A:middle
for Apple Watch turns Apple
Watch into a viewfinder

00:14:20.406 --> 00:14:23.916 A:middle
for Camera on your
iPhone, which allows you

00:14:23.916 --> 00:14:27.606 A:middle
to set your iPhone far away from
you, take a picture of yourself,

00:14:27.726 --> 00:14:29.766 A:middle
friends from a distance,
and make sure

00:14:29.766 --> 00:14:32.076 A:middle
that everyone's in the frame.

00:14:32.146 --> 00:14:35.656 A:middle
It's extending the experience
of the Camera app on iOS.

00:14:36.616 --> 00:14:37.606 A:middle
Now, I challenge you to think

00:14:37.606 --> 00:14:39.816 A:middle
about how you can
do a similar thing

00:14:39.816 --> 00:14:41.966 A:middle
for your apps with Apple Watch.

00:14:41.966 --> 00:14:44.956 A:middle
How can you extend the
experience of your apps in ways

00:14:44.956 --> 00:14:46.486 A:middle
that were not previously
possible?

00:14:47.036 --> 00:14:52.686 A:middle
Okay. Common pitfall number
three is tedious navigation.

00:14:53.366 --> 00:14:56.826 A:middle
Tedious navigation is the
result of inefficiencies

00:14:56.826 --> 00:14:59.656 A:middle
in the user flow that
makes it harder for people

00:14:59.656 --> 00:15:01.996 A:middle
to find what it is that
they're actually looking for.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:14:59.656 --> 00:15:01.996 A:middle
to find what it is that
they're actually looking for.

00:15:02.936 --> 00:15:05.286 A:middle
Now, tedious navigation
often results

00:15:05.286 --> 00:15:08.256 A:middle
from choosing the wrong
structural model for your app.

00:15:09.606 --> 00:15:14.806 A:middle
There are two structural models,
two core ones, for Apple Watch.

00:15:15.146 --> 00:15:17.286 A:middle
The first one is a
page-based model,

00:15:17.906 --> 00:15:20.876 A:middle
and here we just have a series
of pages that are sort of side

00:15:20.876 --> 00:15:23.246 A:middle
by side with each other and
you swipe to go between them.

00:15:24.466 --> 00:15:26.456 A:middle
That's the model
that Weather uses.

00:15:26.716 --> 00:15:28.396 A:middle
You swipe from city to city.

00:15:29.796 --> 00:15:33.616 A:middle
The other structural model
is a hierarchical model,

00:15:33.616 --> 00:15:36.316 A:middle
and in a hierarchical model,
you have a high-level set

00:15:36.316 --> 00:15:40.206 A:middle
of categories or content
summaries, and then you tap one

00:15:40.206 --> 00:15:42.116 A:middle
to go to more detailed
information

00:15:42.116 --> 00:15:43.786 A:middle
or more specific functionality.

00:15:44.926 --> 00:15:47.356 A:middle
Stocks is an example
of a hierarchical app.

00:15:47.356 --> 00:15:50.876 A:middle
At the top level, we have a
list of stocks and markets,

00:15:50.876 --> 00:15:53.876 A:middle
and if we tap on one of these,
it pushes on a child view

00:15:53.876 --> 00:15:57.266 A:middle
with more specific information
on the item we selected.

00:15:58.366 --> 00:16:00.896 A:middle
In watchOS, it's not possible

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:15:58.366 --> 00:16:00.896 A:middle
In watchOS, it's not possible

00:16:00.896 --> 00:16:03.006 A:middle
to mix these models
with each other.

00:16:04.006 --> 00:16:06.526 A:middle
So you can't start
with a page-based model

00:16:06.526 --> 00:16:07.476 A:middle
and then transition

00:16:07.476 --> 00:16:10.206 A:middle
to a hierarchical
one at lower levels.

00:16:10.956 --> 00:16:14.746 A:middle
And conversely, you can't start
with hierarchy and transition

00:16:14.746 --> 00:16:16.806 A:middle
to a page-based model
at lower levels.

00:16:17.806 --> 00:16:20.156 A:middle
The reason for this is
because of screen size.

00:16:21.716 --> 00:16:25.196 A:middle
To explain why, let's
look at this child view

00:16:25.196 --> 00:16:26.846 A:middle
in a hierarchical app.

00:16:26.846 --> 00:16:29.756 A:middle
So I just highlighted that
little chevron or back arrow

00:16:29.756 --> 00:16:32.686 A:middle
in the top-left corner, and
that's your way of getting back

00:16:32.686 --> 00:16:34.806 A:middle
up to the parent view
if you tap that button.

00:16:35.456 --> 00:16:38.976 A:middle
But it's a pretty small tap
target, and the hit area

00:16:39.056 --> 00:16:41.386 A:middle
for it is not very well defined.

00:16:41.416 --> 00:16:43.056 A:middle
It's a little bit
definitely bigger

00:16:43.056 --> 00:16:44.936 A:middle
than the arrow, but not much.

00:16:45.996 --> 00:16:47.896 A:middle
So to make it easier
for people to get back

00:16:47.896 --> 00:16:50.206 A:middle
up to the parent view,
you can also swipe

00:16:50.246 --> 00:16:52.226 A:middle
in from the left
edge of the screen.

00:16:53.236 --> 00:16:55.126 A:middle
And that will help
you transition back

00:16:55.126 --> 00:16:56.506 A:middle
up to the parent
view, as we see here.

00:16:57.486 --> 00:16:59.866 A:middle
Now, the trouble is
in a page-based app,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:00.786 --> 00:17:04.185 A:middle
very similar gestures how you
go to the previous screen.

00:17:04.185 --> 00:17:07.876 A:middle
And because the Watch
display size is pretty small,

00:17:08.236 --> 00:17:10.276 A:middle
it's difficult to support both

00:17:10.276 --> 00:17:12.445 A:middle
of those gestures
simultaneously.

00:17:13.656 --> 00:17:16.516 A:middle
So you must decide which
model is best for your app.

00:17:17.566 --> 00:17:20.476 A:middle
The structure that you choose
should obviously make it easy

00:17:20.646 --> 00:17:23.465 A:middle
for people to find what it is
that they are looking for with

00:17:23.465 --> 00:17:25.856 A:middle
as few swipes or
taps as necessary.

00:17:26.715 --> 00:17:29.086 A:middle
Now, usually deciding
between hierarchy

00:17:29.086 --> 00:17:31.916 A:middle
or a page-based structure comes
down to the number of screens

00:17:31.916 --> 00:17:34.546 A:middle
that are in your app and
the type of information

00:17:34.546 --> 00:17:35.376 A:middle
that you are displaying.

00:17:36.356 --> 00:17:38.296 A:middle
So a page-based structure
works best

00:17:38.296 --> 00:17:40.736 A:middle
when you are showing a flat
collection of information

00:17:41.226 --> 00:17:43.386 A:middle
in which all of the
items are peers,

00:17:44.006 --> 00:17:46.596 A:middle
and page-based apps shouldn't
have too many screens

00:17:46.596 --> 00:17:50.076 A:middle
because swiping between them
is a relatively slow way

00:17:50.146 --> 00:17:51.476 A:middle
to browse through content.

00:17:52.376 --> 00:17:54.266 A:middle
So Weather meets both
of these criteria.

00:17:54.866 --> 00:17:58.036 A:middle
Most people only want to check
the weather for a few cities,

00:17:58.036 --> 00:17:59.106 A:middle
so you don't have
too many items,

00:17:59.106 --> 00:18:01.446 A:middle
and it doesn't feel
cumbersome that you have

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:17:59.106 --> 00:18:01.446 A:middle
and it doesn't feel
cumbersome that you have

00:18:01.446 --> 00:18:03.896 A:middle
to swipe between them.

00:18:03.896 --> 00:18:05.636 A:middle
When it comes to understanding
weather conditions,

00:18:05.636 --> 00:18:07.456 A:middle
all cities are basically equal.

00:18:07.456 --> 00:18:09.226 A:middle
There is no need to organize

00:18:09.226 --> 00:18:11.286 A:middle
or categorize them
on some higher level.

00:18:12.416 --> 00:18:15.736 A:middle
On the other hand, hierarchical
apps are better for larger

00:18:15.736 --> 00:18:18.016 A:middle
or more complex data structures.

00:18:18.836 --> 00:18:22.086 A:middle
People may use the Stocks
app to track dozens of stocks

00:18:22.086 --> 00:18:23.656 A:middle
and markets at the same time.

00:18:24.406 --> 00:18:27.566 A:middle
By using a top-level list,
navigating to any one

00:18:27.636 --> 00:18:30.816 A:middle
of those individual stocks or
markets is really easy to do.

00:18:31.196 --> 00:18:32.456 A:middle
You just scroll the screen,

00:18:32.836 --> 00:18:35.406 A:middle
find the one you are
looking for, and select it.

00:18:36.196 --> 00:18:39.496 A:middle
Now, the other cool thing
about this is there's a ton

00:18:39.496 --> 00:18:41.466 A:middle
of really useful information
just at this level.

00:18:41.916 --> 00:18:44.516 A:middle
So people may get all of the
information they actually need

00:18:44.516 --> 00:18:46.726 A:middle
without even needing
to navigate at all.

00:18:47.586 --> 00:18:48.806 A:middle
That's really efficient.

00:18:49.796 --> 00:18:55.266 A:middle
Okay. So, now just imagine
if we had designed this

00:18:55.266 --> 00:18:57.566 A:middle
as being a paginated
or page-based app.

00:18:57.756 --> 00:19:01.156 A:middle
It would take people forever to
get through all of the stocks

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:18:57.756 --> 00:19:01.156 A:middle
It would take people forever to
get through all of the stocks

00:19:01.256 --> 00:19:03.466 A:middle
to go from -- to find the
one that they are looking

00:19:03.526 --> 00:19:05.086 A:middle
for if it was really far away.

00:19:05.766 --> 00:19:08.156 A:middle
And hopefully they would start
swiping in the right direction

00:19:08.156 --> 00:19:10.286 A:middle
because if they didn't,
they'd have to double back

00:19:10.286 --> 00:19:12.396 A:middle
and go all the way
back to the beginning.

00:19:13.416 --> 00:19:15.296 A:middle
Choosing the right model
is really important.

00:19:16.656 --> 00:19:18.816 A:middle
Tedious navigation
can also result

00:19:18.816 --> 00:19:20.436 A:middle
from overusing modal sheets.

00:19:22.186 --> 00:19:25.336 A:middle
Now, modal sheets support
paging through multiple views,

00:19:26.296 --> 00:19:28.296 A:middle
and I've seen people try to
get around this limitation

00:19:28.296 --> 00:19:29.906 A:middle
of not being able
to go from hierarchy

00:19:29.906 --> 00:19:33.836 A:middle
to page-based structures by
using modal sheets instead.

00:19:34.766 --> 00:19:37.316 A:middle
Now, this is something that I
would strongly advise against.

00:19:38.136 --> 00:19:40.416 A:middle
First of all, modal sheets
don't display the time,

00:19:40.416 --> 00:19:42.026 A:middle
and we think it's pretty
important that most

00:19:42.026 --> 00:19:45.626 A:middle
of the time people can see
the time on their Apple Watch.

00:19:46.816 --> 00:19:49.916 A:middle
And the animation of a modal
sheet sliding up is meant

00:19:49.916 --> 00:19:51.106 A:middle
to be a bit disruptive.

00:19:51.596 --> 00:19:54.546 A:middle
It's like this separate pane
of information, which slides

00:19:54.546 --> 00:19:56.546 A:middle
up over the main
interface and takes people

00:19:56.546 --> 00:19:58.176 A:middle
out of the main app experience.

00:19:58.716 --> 00:20:00.546 A:middle
It's meant to signal
a departure.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:19:58.716 --> 00:20:00.546 A:middle
It's meant to signal
a departure.

00:20:01.156 --> 00:20:02.726 A:middle
It should feel a
little bit disruptive.

00:20:03.306 --> 00:20:05.696 A:middle
So if a primary aspect of
the way people navigate

00:20:05.696 --> 00:20:08.216 A:middle
in your app causes these
modal sheet animations

00:20:08.216 --> 00:20:09.386 A:middle
to occur all the time,

00:20:09.736 --> 00:20:12.176 A:middle
the overall experience is
not going to feel very fluid.

00:20:12.176 --> 00:20:15.106 A:middle
It will feel jarring,
disjointed.

00:20:16.586 --> 00:20:18.576 A:middle
Now, another thing
related to modal sheets

00:20:18.576 --> 00:20:20.536 A:middle
and tedious navigation,
is you don't want

00:20:20.536 --> 00:20:23.056 A:middle
to have too many
modal sheets sliding

00:20:23.056 --> 00:20:25.486 A:middle
up over each other
or back to back.

00:20:25.686 --> 00:20:27.256 A:middle
This is the same thing on iOS.

00:20:27.256 --> 00:20:29.996 A:middle
People will start to
feel like they are lost

00:20:29.996 --> 00:20:33.226 A:middle
in this modal experience
that never ends,

00:20:33.226 --> 00:20:36.056 A:middle
and they will have difficulty
or feel like it's difficult

00:20:36.056 --> 00:20:39.006 A:middle
to get back to the main
experience of your app.

00:20:39.626 --> 00:20:41.966 A:middle
Now, regardless of what
structure you choose,

00:20:41.966 --> 00:20:44.016 A:middle
it's important to
keep it simple.

00:20:44.806 --> 00:20:47.666 A:middle
So in a hierarchical app,
you shouldn't have more

00:20:47.666 --> 00:20:51.016 A:middle
than two levels of
hierarchy, three at the most.

00:20:51.566 --> 00:20:53.026 A:middle
Anything more than
that, and it's going

00:20:53.026 --> 00:20:54.156 A:middle
to take people a long time

00:20:54.156 --> 00:20:55.536 A:middle
to find the things
they are interested in,

00:20:55.536 --> 00:20:58.896 A:middle
and they will start to feel
lost in your hierarchy.

00:20:59.756 --> 00:21:02.486 A:middle
And with page-based apps,
as I was suggesting before,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:20:59.756 --> 00:21:02.486 A:middle
And with page-based apps,
as I was suggesting before,

00:21:02.756 --> 00:21:04.546 A:middle
avoid having too many pages.

00:21:04.946 --> 00:21:07.646 A:middle
Again, swiping through all of
these pages will take a lot

00:21:07.646 --> 00:21:09.336 A:middle
of time and feel really tedious.

00:21:10.826 --> 00:21:14.006 A:middle
Tedious navigation is really
inefficient navigation.

00:21:14.896 --> 00:21:16.546 A:middle
And there's that design
principle I was talking

00:21:16.546 --> 00:21:18.706 A:middle
about earlier, Lightweight
Interaction.

00:21:19.086 --> 00:21:20.566 A:middle
Lightweight Interaction
is really all

00:21:20.566 --> 00:21:24.976 A:middle
about efficient navigation, or a
big aspect of it is efficiency.

00:21:26.596 --> 00:21:32.036 A:middle
So moving on, the fourth common
pitfall is confusing labels.

00:21:32.846 --> 00:21:37.296 A:middle
Now, what I am talking about
here is mostly about page titles

00:21:37.296 --> 00:21:40.196 A:middle
and the Close buttons or Dismiss
buttons for modal sheets.

00:21:40.936 --> 00:21:42.256 A:middle
Let's start with page titles.

00:21:43.386 --> 00:21:46.616 A:middle
Now, a common misconception
is that in a hierarchical app,

00:21:47.366 --> 00:21:50.026 A:middle
the title there where it says Do
Not Disturb on the right side,

00:21:50.026 --> 00:21:53.256 A:middle
that that's actually a Back
button or Back button label

00:21:53.256 --> 00:21:54.886 A:middle
and not a title for
the current view.

00:21:54.886 --> 00:21:57.376 A:middle
But that's not really the case.

00:21:58.496 --> 00:22:00.416 A:middle
If we were to use it
as such, we would wind

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:21:58.496 --> 00:22:00.416 A:middle
If we were to use it
as such, we would wind

00:22:00.416 --> 00:22:03.316 A:middle
up having multiple screens
that share the same title,

00:22:03.316 --> 00:22:05.616 A:middle
and at a quick glance,
they both are supposed

00:22:05.616 --> 00:22:06.616 A:middle
to look like titles.

00:22:06.696 --> 00:22:09.176 A:middle
So you should really
avoid doing this.

00:22:10.006 --> 00:22:13.836 A:middle
Now, I understand
why people do it.

00:22:13.966 --> 00:22:16.576 A:middle
This is also wrong
for the same reason.

00:22:16.576 --> 00:22:17.676 A:middle
It's not a Back button,

00:22:17.676 --> 00:22:20.536 A:middle
so please don't have
Back here instead.

00:22:20.536 --> 00:22:25.006 A:middle
So as I said, I got
ahead of myself.

00:22:25.006 --> 00:22:27.476 A:middle
I understand why people
treat it as a Back button

00:22:27.476 --> 00:22:29.816 A:middle
because it originally
resembles a Back button

00:22:30.236 --> 00:22:31.876 A:middle
from an iPhone or an iPad.

00:22:32.996 --> 00:22:35.276 A:middle
But on the iPhone or
an iPad, you have space

00:22:35.356 --> 00:22:38.736 A:middle
to show both the Back button
and a title at the same time.

00:22:39.776 --> 00:22:42.076 A:middle
Now, in Apple Watch, the
display is much smaller,

00:22:42.626 --> 00:22:44.236 A:middle
so you can't show both.

00:22:44.426 --> 00:22:45.836 A:middle
It would be kind of ridiculous.

00:22:45.836 --> 00:22:49.856 A:middle
So you have to choose which
one to show, and ultimately,

00:22:49.856 --> 00:22:51.956 A:middle
showing a title is
more important

00:22:51.956 --> 00:22:53.186 A:middle
than showing a Back button.

00:22:53.536 --> 00:22:55.466 A:middle
It's more important that people
know what they are currently

00:22:55.466 --> 00:22:56.786 A:middle
looking at than what's

00:22:56.786 --> 00:22:59.326 A:middle
on the previous screen
or the parent screen.

00:22:59.866 --> 00:23:04.066 A:middle
Now, the other common
misconception when it comes

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:22:59.866 --> 00:23:04.066 A:middle
Now, the other common
misconception when it comes

00:23:04.066 --> 00:23:07.326 A:middle
to labels relates to
modal sheet Close buttons

00:23:07.846 --> 00:23:08.926 A:middle
or Dismiss buttons.

00:23:09.716 --> 00:23:11.726 A:middle
Now, these can be
renamed because,

00:23:11.726 --> 00:23:14.266 A:middle
instead of saying Dismiss,
it might be more natural

00:23:14.266 --> 00:23:17.896 A:middle
to say Close, or
Done, or Cancel.

00:23:18.506 --> 00:23:22.496 A:middle
But however you rename it, it
needs to be clear to people

00:23:22.496 --> 00:23:23.636 A:middle
that these are actionable.

00:23:23.736 --> 00:23:26.756 A:middle
People need to realize that
they can tap that label

00:23:26.756 --> 00:23:27.676 A:middle
and it's going to do something.

00:23:27.676 --> 00:23:29.536 A:middle
And not just do anything.

00:23:29.536 --> 00:23:31.856 A:middle
It's actually going to close the
modal sheet and take them back

00:23:31.936 --> 00:23:33.146 A:middle
to the previous screen.

00:23:34.646 --> 00:23:36.456 A:middle
So you don't want to
do something like this,

00:23:36.736 --> 00:23:38.246 A:middle
where you just use
it as a title,

00:23:38.586 --> 00:23:40.166 A:middle
because then people are
not going to realize

00:23:40.226 --> 00:23:42.776 A:middle
that it's actionable, and they
are going to hunt around and try

00:23:42.776 --> 00:23:44.126 A:middle
to figure out how they
are actually going

00:23:44.126 --> 00:23:45.566 A:middle
to close the modal
sheet and be stuck

00:23:45.566 --> 00:23:47.566 A:middle
in this screen for too long.

00:23:48.986 --> 00:23:53.266 A:middle
And for a variety of reasons,
please, please do not do this.

00:23:53.916 --> 00:23:56.576 A:middle
Right? As I said before,
even in a hierarchical app,

00:23:56.806 --> 00:23:59.526 A:middle
you shouldn't treat
this as a Back button.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:00.246 --> 00:24:01.726 A:middle
So this is just putting
an angle bracket

00:24:01.726 --> 00:24:03.026 A:middle
and the word Back in here.

00:24:03.026 --> 00:24:05.146 A:middle
But this is going to be
confusing for people.

00:24:05.456 --> 00:24:07.346 A:middle
First of all, modal sheets
slide up from the bottom

00:24:07.346 --> 00:24:09.056 A:middle
of the screen, they don't
slide in from the right,

00:24:09.686 --> 00:24:12.656 A:middle
and you can't use the left-edge
swipe to get back out of here.

00:24:13.066 --> 00:24:15.456 A:middle
This is really confusing for
people when they see this.

00:24:16.836 --> 00:24:21.706 A:middle
Okay. Now, the fifth next major
common pitfall that we have seen

00:24:21.706 --> 00:24:24.866 A:middle
on Apple Watch is
using the menu control

00:24:24.936 --> 00:24:28.036 A:middle
for primary navigation
in your app.

00:24:28.036 --> 00:24:30.806 A:middle
Now, menus like this one
for Messages are really good

00:24:30.806 --> 00:24:34.516 A:middle
for contextual actions,
like making a new message.

00:24:35.226 --> 00:24:37.976 A:middle
Or for view mode preferences,
like this one for Calendar

00:24:37.976 --> 00:24:40.596 A:middle
for switching the visual
appearance of your schedule.

00:24:41.126 --> 00:24:45.806 A:middle
But when you try to use a menu
for navigation, it causes a lot

00:24:45.806 --> 00:24:47.076 A:middle
of usability problems.

00:24:48.576 --> 00:24:51.326 A:middle
The main one is that people
just don't know where they are

00:24:51.326 --> 00:24:54.136 A:middle
in your app structure or
even that they can navigate.

00:24:55.216 --> 00:24:57.126 A:middle
So for example, in
a hierarchical app,

00:24:57.586 --> 00:25:00.146 A:middle
that arrow there serves a
really important purpose.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:24:57.586 --> 00:25:00.146 A:middle
that arrow there serves a
really important purpose.

00:25:00.966 --> 00:25:03.666 A:middle
It lets people know about
what the structure is

00:25:03.666 --> 00:25:04.696 A:middle
of the app that they are in.

00:25:04.996 --> 00:25:07.826 A:middle
It lets people know that they
are in a hierarchical app.

00:25:07.826 --> 00:25:11.026 A:middle
More than that, it lets people
know they are in a child view

00:25:11.406 --> 00:25:14.936 A:middle
so they can go back up to access
the navigation for the app.

00:25:15.846 --> 00:25:17.096 A:middle
That's pretty important,

00:25:17.556 --> 00:25:19.506 A:middle
that's a pretty fundamental
thing for people to know.

00:25:20.656 --> 00:25:24.176 A:middle
Similarly, in a page-based
app, those dots at the bottom

00:25:24.176 --> 00:25:26.686 A:middle
of the screen tell
people that they're

00:25:26.686 --> 00:25:28.206 A:middle
in a page-based structure.

00:25:28.866 --> 00:25:31.956 A:middle
And it tells them how many other
pages there are, it tells them

00:25:31.956 --> 00:25:33.746 A:middle
where they are relative
to those pages.

00:25:34.236 --> 00:25:36.256 A:middle
It tells them that they
can swipe side to side

00:25:36.326 --> 00:25:37.676 A:middle
to navigate between pages.

00:25:38.326 --> 00:25:38.946 A:middle
It's a lot.

00:25:39.346 --> 00:25:40.306 A:middle
It's doing a lot; right?

00:25:40.306 --> 00:25:42.986 A:middle
It tells people a lot about
how to interact with the app.

00:25:44.366 --> 00:25:46.336 A:middle
But if you used a
menu for navigation,

00:25:46.336 --> 00:25:49.866 A:middle
there would be no onscreen
visual cues about how

00:25:49.866 --> 00:25:53.236 A:middle
to navigate, and like I said,
you wouldn't see any cues

00:25:53.236 --> 00:25:54.846 A:middle
that navigation is
even possible.

00:25:55.246 --> 00:25:57.776 A:middle
So you might feel like the
screen you are currently looking

00:25:57.776 --> 00:26:01.896 A:middle
at is the only screen
the app has.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:25:57.776 --> 00:26:01.896 A:middle
at is the only screen
the app has.

00:26:01.896 --> 00:26:05.006 A:middle
So it's best to stick with
just straight-up hierarchy

00:26:05.006 --> 00:26:07.966 A:middle
or page-based structures
in your app and not try

00:26:07.966 --> 00:26:09.416 A:middle
to use a menu for navigation.

00:26:10.736 --> 00:26:14.446 A:middle
Now, this is a bit of a tangent,
but it's related to menus,

00:26:14.446 --> 00:26:15.836 A:middle
so I thought I would
mention it here.

00:26:15.836 --> 00:26:17.686 A:middle
It's sort of a bonus pitfall.

00:26:17.946 --> 00:26:20.386 A:middle
You don't have to
pay anything extra

00:26:20.986 --> 00:26:23.726 A:middle
for this, but I accept tips.

00:26:23.726 --> 00:26:26.606 A:middle
So in menus, like I said.

00:26:27.046 --> 00:26:31.186 A:middle
Menus are -- have a very
distinct visual style to them.

00:26:32.166 --> 00:26:35.556 A:middle
The appearance of the buttons
here have dark liner icons.

00:26:36.146 --> 00:26:40.376 A:middle
They are situated on these
filled-in lightish gray circles,

00:26:40.656 --> 00:26:41.716 A:middle
and they have light labels.

00:26:41.716 --> 00:26:44.026 A:middle
It's a very distinct
visual appearance.

00:26:44.996 --> 00:26:47.976 A:middle
If you design your app's
UI to look like this,

00:26:47.976 --> 00:26:50.546 A:middle
it's going to confuse
the heck out of people.

00:26:51.396 --> 00:26:53.766 A:middle
They might think that they
pressed the display too hard

00:26:53.766 --> 00:26:55.966 A:middle
and they are actually looking
at the menu for your app,

00:26:56.896 --> 00:26:59.486 A:middle
and then they realize they
don't want to navigate anywhere

00:26:59.486 --> 00:27:01.046 A:middle
or do any of this
stuff, so they try

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:26:59.486 --> 00:27:01.046 A:middle
or do any of this
stuff, so they try

00:27:01.046 --> 00:27:02.796 A:middle
to close this by
tapping outside.

00:27:02.796 --> 00:27:05.266 A:middle
But that does nothing, of
course, because they are not

00:27:05.266 --> 00:27:08.436 A:middle
in the menu, so they feel like
your app is frozen on them.

00:27:09.106 --> 00:27:12.316 A:middle
Not a good experience
for people to have.

00:27:12.316 --> 00:27:13.856 A:middle
Fundamentally, there's
nothing wrong

00:27:13.856 --> 00:27:17.866 A:middle
with having a navigation
system in your app

00:27:17.926 --> 00:27:20.536 A:middle
that has these large
graphical icons like this,

00:27:20.986 --> 00:27:23.426 A:middle
but try to do something
to distinguish it

00:27:23.536 --> 00:27:26.136 A:middle
from the appearance of
the menu control itself.

00:27:26.826 --> 00:27:29.596 A:middle
So rather than having those dark
icons, light gray background,

00:27:29.596 --> 00:27:32.136 A:middle
try adding in your
Global Tint color.

00:27:32.646 --> 00:27:35.486 A:middle
Or rather than having
the dark icons there,

00:27:35.486 --> 00:27:39.076 A:middle
maybe make them white and do an
outline stroke for the buttons.

00:27:39.526 --> 00:27:41.646 A:middle
Or do something more
even different than that.

00:27:42.236 --> 00:27:44.816 A:middle
Whatever you do, try to make
it distinct from the appearance

00:27:45.106 --> 00:27:48.126 A:middle
of the menu control itself.

00:27:48.276 --> 00:27:52.506 A:middle
Okay. So that's it for
menus, and that's it for me.

00:27:52.796 --> 00:27:55.426 A:middle
I actually would love to hand it
over to my esteemed colleague,

00:27:55.426 --> 00:27:57.176 A:middle
Rachel Roth, to take this home.

00:27:57.716 --> 00:27:57.976 A:middle
Rachel?

00:27:58.361 --> 00:28:00.361 A:middle
[Applause]

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:27:58.361 --> 00:28:00.361 A:middle
[Applause]

00:28:00.706 --> 00:28:01.416 A:middle
&gt;&gt; RACHEL ROTH: Thanks, Mike.

00:28:02.506 --> 00:28:03.346 A:middle
Hi, everybody.

00:28:04.026 --> 00:28:07.596 A:middle
My name is Rachel Roth, and I
am the other User Experience

00:28:07.636 --> 00:28:08.776 A:middle
Evangelist at Apple.

00:28:08.866 --> 00:28:11.436 A:middle
So I am going to take you
through the rest of this list.

00:28:12.596 --> 00:28:15.216 A:middle
On the Apple Watch,
it is really important

00:28:15.216 --> 00:28:17.866 A:middle
that people can quickly
determine what's tappable

00:28:17.866 --> 00:28:21.326 A:middle
and what's not tappable,
and a common problem

00:28:21.326 --> 00:28:23.226 A:middle
that we see all the
time are buttons

00:28:23.226 --> 00:28:24.636 A:middle
that don't look like buttons.

00:28:25.656 --> 00:28:28.216 A:middle
The Watch has its
own design language,

00:28:28.216 --> 00:28:30.376 A:middle
and it's not identical to iOS.

00:28:32.076 --> 00:28:36.976 A:middle
On iOS, we primarily rely on
color or position on the screen

00:28:37.026 --> 00:28:38.536 A:middle
to tell if something's tappable.

00:28:39.946 --> 00:28:44.296 A:middle
So when a control is placed into
a toolbar or a navigation bar

00:28:44.296 --> 00:28:46.816 A:middle
and it's given a different
color, people can assume

00:28:46.876 --> 00:28:49.126 A:middle
that it's something that
they can interact with.

00:28:49.676 --> 00:28:52.206 A:middle
Like here on Maps, we
know that each item

00:28:52.206 --> 00:28:53.426 A:middle
in the corner is tappable

00:28:53.426 --> 00:28:55.636 A:middle
because of its location
and its color.

00:28:55.636 --> 00:29:01.266 A:middle
Now, on Apple Watch, most
controls are put inside

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:28:55.636 --> 00:29:01.266 A:middle
Now, on Apple Watch, most
controls are put inside

00:29:01.266 --> 00:29:04.466 A:middle
of these rounded rectangle
or circular shapes,

00:29:04.466 --> 00:29:06.726 A:middle
and that's because of
the limited space we are

00:29:06.726 --> 00:29:08.086 A:middle
dealing with.

00:29:08.086 --> 00:29:12.206 A:middle
There just aren't room
to have a dedicated place

00:29:12.206 --> 00:29:13.796 A:middle
like a navigation
bar or toolbar.

00:29:15.516 --> 00:29:19.016 A:middle
Everything aside from the
status bar is in one view.

00:29:19.416 --> 00:29:22.126 A:middle
So there's no dedicated
place to put those controls.

00:29:22.126 --> 00:29:27.196 A:middle
And it's also trickier to rely
on color as a visual indication

00:29:27.196 --> 00:29:30.856 A:middle
of interactivity because
page titles are colored

00:29:30.856 --> 00:29:31.716 A:middle
on the Apple Watch.

00:29:32.256 --> 00:29:36.056 A:middle
And we do this to reinforce
context and also branding.

00:29:36.856 --> 00:29:39.226 A:middle
It aids in usability
because the color

00:29:39.226 --> 00:29:42.176 A:middle
of the titles can help you
understand what app you are in,

00:29:42.486 --> 00:29:44.206 A:middle
especially if you
look away because --

00:29:44.206 --> 00:29:47.496 A:middle
to see if your bus is coming
and quickly look back.

00:29:48.066 --> 00:29:50.806 A:middle
Here are two apps with
very similar content.

00:29:50.916 --> 00:29:55.766 A:middle
We have Yelp on the left, and
on the right is Foursquare.

00:29:56.826 --> 00:29:58.586 A:middle
Again, both have
similar content,

00:29:59.046 --> 00:30:01.616 A:middle
but because Yelp has
their red branded color

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:29:59.046 --> 00:30:01.616 A:middle
but because Yelp has
their red branded color

00:30:01.616 --> 00:30:03.126 A:middle
and Foursquare is
more of a pink,

00:30:03.606 --> 00:30:09.446 A:middle
that page title color lets
you know what app you're in.

00:30:09.586 --> 00:30:10.096 A:middle
Same thing.

00:30:10.096 --> 00:30:15.486 A:middle
We have Timers on the left and
Runtastic Six Pack on the right.

00:30:16.066 --> 00:30:19.486 A:middle
The color really helps reinforce
the identity of the application.

00:30:19.616 --> 00:30:22.756 A:middle
A lot of people have said
they are not sure how to set

00:30:22.756 --> 00:30:28.896 A:middle
that color, so that's
the Global Tint color.

00:30:29.306 --> 00:30:32.496 A:middle
Now, another convention that we
use on iOS is we add chevrons

00:30:32.536 --> 00:30:35.856 A:middle
to things that are tappable,
like we do in table rows

00:30:35.856 --> 00:30:40.076 A:middle
of settings and next
to text labels

00:30:40.076 --> 00:30:44.586 A:middle
like the developer
name in the App Store.

00:30:44.756 --> 00:30:47.916 A:middle
But if we put chevrons
on the Apple Watch, well,

00:30:48.676 --> 00:30:50.236 A:middle
they just take up
too much space.

00:30:51.276 --> 00:30:54.186 A:middle
If the label for
voicemail was any longer

00:30:54.186 --> 00:30:56.456 A:middle
or my font size was set larger,

00:30:56.816 --> 00:30:59.066 A:middle
it would cause the text
to wrap or truncate.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:00.586 --> 00:31:02.526 A:middle
And also, they just
become noisy.

00:31:02.526 --> 00:31:04.856 A:middle
You are dealing with
a very compact width

00:31:05.096 --> 00:31:08.646 A:middle
on the Apple Watch, so the
chevrons become a distraction

00:31:08.646 --> 00:31:09.786 A:middle
from the icons and the text,

00:31:09.976 --> 00:31:11.846 A:middle
and that's the important
information.

00:31:13.256 --> 00:31:15.516 A:middle
If you are using the
rounded rectangle shapes,

00:31:15.706 --> 00:31:18.936 A:middle
there's no need to add chevrons
to indicate interactivity.

00:31:19.366 --> 00:31:22.846 A:middle
They are going to
instinctively look tappable.

00:31:22.846 --> 00:31:25.436 A:middle
Now, another convention that
we use on Apple Watch is

00:31:25.436 --> 00:31:28.776 A:middle
to put buttons into a circle,
and without the circle,

00:31:30.116 --> 00:31:32.616 A:middle
these phone icons would
look pretty ridiculous,

00:31:32.776 --> 00:31:36.656 A:middle
and they would also seem maybe
more like a status indicator

00:31:36.656 --> 00:31:38.166 A:middle
or a decorative embellishment.

00:31:39.506 --> 00:31:42.486 A:middle
But the circle makes them
unmistakably button-y.

00:31:43.086 --> 00:31:45.546 A:middle
When you are dealing with
these short interaction times

00:31:45.546 --> 00:31:48.036 A:middle
and quick decisions,
you really want to --

00:31:48.036 --> 00:31:50.206 A:middle
people need to be able to
quickly react to something.

00:31:50.206 --> 00:31:51.656 A:middle
I have a phone call.

00:31:51.656 --> 00:31:53.416 A:middle
Do I want to accept
or decline it?

00:31:53.676 --> 00:31:56.606 A:middle
The circles help make
the actions very clear.

00:31:57.916 --> 00:32:00.186 A:middle
But it's not as though
rounded rectangles

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:31:57.916 --> 00:32:00.186 A:middle
But it's not as though
rounded rectangles

00:32:00.186 --> 00:32:02.986 A:middle
and circular shapes are these
revolutionary new concepts.

00:32:03.256 --> 00:32:05.376 A:middle
This is where there
is similarity to iOS.

00:32:06.776 --> 00:32:08.446 A:middle
We use circles on the iPhone

00:32:08.446 --> 00:32:10.406 A:middle
when buttons might
otherwise be ambiguous.

00:32:12.246 --> 00:32:13.986 A:middle
Same with the rounded
rectangles.

00:32:13.986 --> 00:32:16.506 A:middle
You see them all the time
with segmented controls

00:32:16.506 --> 00:32:18.906 A:middle
and the Buy buttons
in the App Store.

00:32:19.786 --> 00:32:22.526 A:middle
In fact, if we didn't have
the rounded rectangle,

00:32:22.796 --> 00:32:24.476 A:middle
that Buy button might
be ambiguous,

00:32:24.476 --> 00:32:27.076 A:middle
and if there's one thing
we can all agree on,

00:32:27.306 --> 00:32:29.656 A:middle
we want to make it
really obvious how

00:32:29.786 --> 00:32:32.326 A:middle
to buy apps in the App Store.

00:32:33.216 --> 00:32:35.606 A:middle
So on Apple Watch,
the rounded rectangles

00:32:35.606 --> 00:32:39.276 A:middle
and circles help people quickly
understand what's actionable,

00:32:39.346 --> 00:32:40.656 A:middle
and when you are dealing

00:32:40.656 --> 00:32:42.856 A:middle
with those really brief
interaction times,

00:32:42.896 --> 00:32:45.936 A:middle
like Mike said, you really just
have a couple seconds while

00:32:45.996 --> 00:32:48.266 A:middle
someone holds their arm
up before it gets tired.

00:32:48.956 --> 00:32:50.886 A:middle
Every fraction of
a second counts.

00:32:51.416 --> 00:32:54.906 A:middle
So you want to be sure to
put anything that's tappable

00:32:55.236 --> 00:32:57.616 A:middle
into a rounded rectangle
or circular shape,

00:32:58.486 --> 00:33:01.206 A:middle
and just as importantly,
don't use these shapes

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:32:58.486 --> 00:33:01.206 A:middle
and just as importantly,
don't use these shapes

00:33:01.206 --> 00:33:02.846 A:middle
for anything that's
not tappable.

00:33:03.516 --> 00:33:06.756 A:middle
They will look tappable and
confuse people if they aren't.

00:33:08.306 --> 00:33:11.906 A:middle
Now, in iOS, we sometimes do
use these shaded backgrounds

00:33:12.096 --> 00:33:13.826 A:middle
to group like items together.

00:33:14.986 --> 00:33:17.466 A:middle
So it might be tempting
to do something like this

00:33:17.506 --> 00:33:19.846 A:middle
on the Apple Watch,
but if you do,

00:33:20.116 --> 00:33:22.026 A:middle
all of these things
would look tappable.

00:33:22.846 --> 00:33:25.886 A:middle
And if the person using your
app thinks they're tappable

00:33:25.886 --> 00:33:29.626 A:middle
and they try tapping and nothing
happens, they're going to assume

00:33:29.626 --> 00:33:30.926 A:middle
that your app is broken.

00:33:31.416 --> 00:33:33.586 A:middle
So if you have a
situation like this,

00:33:33.586 --> 00:33:35.896 A:middle
you are much better off
using separator lines

00:33:35.976 --> 00:33:38.796 A:middle
to group things together,
just like we do in Stocks.

00:33:39.876 --> 00:33:41.466 A:middle
They demonstrate which
items are related,

00:33:41.466 --> 00:33:43.286 A:middle
and they'll also
help your eye track

00:33:43.286 --> 00:33:45.586 A:middle
across that horizontal list.

00:33:46.596 --> 00:33:49.066 A:middle
So make sure your
buttons look like buttons,

00:33:49.426 --> 00:33:55.086 A:middle
and make sure your
noninteractive content doesn't.

00:33:55.366 --> 00:33:57.106 A:middle
Which brings me to
the next item,

00:33:57.106 --> 00:33:58.966 A:middle
which is inadequate tap targets.

00:33:59.526 --> 00:34:02.546 A:middle
Now, knowing what is
interactive is a start,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:33:59.526 --> 00:34:02.546 A:middle
Now, knowing what is
interactive is a start,

00:34:02.546 --> 00:34:04.916 A:middle
but if people can't
easily tap those things,

00:34:05.076 --> 00:34:07.126 A:middle
you still have a
usability problem.

00:34:08.156 --> 00:34:10.516 A:middle
Designing for Touch is
critically important

00:34:10.516 --> 00:34:12.456 A:middle
on the Apple Watch, especially

00:34:12.456 --> 00:34:14.985 A:middle
since someone might be using
your app while they are

00:34:15.275 --> 00:34:16.696 A:middle
in motion.

00:34:17.126 --> 00:34:19.985 A:middle
So something like this might
seem usable when you are

00:34:19.985 --> 00:34:21.896 A:middle
in Photoshop or in Sketch.

00:34:22.456 --> 00:34:25.476 A:middle
You are sitting nice and
stable in your office chair,

00:34:25.476 --> 00:34:27.606 A:middle
you've got a nice big
monitor at your desk.

00:34:27.606 --> 00:34:30.676 A:middle
And even in the simulator

00:34:30.676 --> 00:34:34.646 A:middle
when you are using your
mouse, this seems very easy.

00:34:34.716 --> 00:34:36.176 A:middle
But once you get
it on the Watch,

00:34:37.005 --> 00:34:39.426 A:middle
it's going to be a problem
to hit those tap targets

00:34:39.426 --> 00:34:41.806 A:middle
if they aren't adequately sized.

00:34:42.656 --> 00:34:45.106 A:middle
Scrolling is so easy
on the Watch.

00:34:45.136 --> 00:34:46.116 A:middle
You've got the Crown.

00:34:46.116 --> 00:34:47.856 A:middle
It's easy to swipe your finger.

00:34:48.146 --> 00:34:50.545 A:middle
So don't be afraid to let
things scroll out of view,

00:34:50.545 --> 00:34:53.916 A:middle
especially if that means
you can avoid truncation

00:34:53.916 --> 00:34:58.386 A:middle
and make your buttons
really easy to hit.

00:34:58.386 --> 00:35:01.326 A:middle
Now, on the Apple Watch, you
want your circular controls

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:34:58.386 --> 00:35:01.326 A:middle
Now, on the Apple Watch, you
want your circular controls

00:35:01.326 --> 00:35:07.326 A:middle
to be at least 80 by 80 pixels
on the 42 millimeter or 75

00:35:07.326 --> 00:35:09.546 A:middle
by 75 on the 38 millimeter.

00:35:10.316 --> 00:35:12.236 A:middle
But there's nothing
wrong with going bigger.

00:35:13.266 --> 00:35:14.446 A:middle
That's what Chipotle did.

00:35:15.326 --> 00:35:18.776 A:middle
The primary action, the one
thing they want people to do

00:35:18.776 --> 00:35:20.896 A:middle
with their Watch app
is order a burrito,

00:35:21.696 --> 00:35:24.526 A:middle
so they've got this nice, big
button that does exactly that.

00:35:24.676 --> 00:35:26.846 A:middle
I mean, there's no
way you are going

00:35:26.846 --> 00:35:30.746 A:middle
to have trouble tapping
that button.

00:35:30.926 --> 00:35:33.046 A:middle
Now, when it comes to
the rectangular buttons,

00:35:33.746 --> 00:35:38.066 A:middle
you absolutely should not go
smaller than 53 pixels in height

00:35:38.406 --> 00:35:42.356 A:middle
on the 42 millimeter
or 50 pixels on the 38.

00:35:42.716 --> 00:35:44.686 A:middle
But we tend to go larger
everywhere throughout

00:35:44.686 --> 00:35:45.146 A:middle
the system.

00:35:45.606 --> 00:35:47.456 A:middle
Usually 80 pixels
in height or more.

00:35:48.256 --> 00:35:52.026 A:middle
Again, bigger is better.

00:35:52.216 --> 00:35:55.376 A:middle
And always be sure to extend
your buttons to that full width

00:35:55.376 --> 00:35:57.946 A:middle
of the canvas, even if
you have a short label,

00:35:58.346 --> 00:36:01.516 A:middle
because this is not going to
be as easy to tap as this is,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:35:58.346 --> 00:36:01.516 A:middle
because this is not going to
be as easy to tap as this is,

00:36:02.066 --> 00:36:03.376 A:middle
especially when you
are about to step

00:36:03.376 --> 00:36:04.876 A:middle
out the door to go for a walk.

00:36:07.296 --> 00:36:09.936 A:middle
Now, in some cases, you may
need to have two buttons side

00:36:10.136 --> 00:36:14.786 A:middle
by side, and this will still
work, but you are going to have

00:36:14.786 --> 00:36:16.756 A:middle
to find really short
text labels.

00:36:18.516 --> 00:36:22.286 A:middle
And three side by side with text
is really not a good option,

00:36:23.026 --> 00:36:24.436 A:middle
even with the shortest words.

00:36:25.586 --> 00:36:29.536 A:middle
Now, if you have individual
numbers or single characters

00:36:29.536 --> 00:36:33.566 A:middle
or icons, you can get away with
putting three side by side,

00:36:34.176 --> 00:36:37.056 A:middle
but they're still going to
be really close together,

00:36:37.466 --> 00:36:39.236 A:middle
especially on the
smaller-size watch,

00:36:39.326 --> 00:36:42.726 A:middle
and this often gives people
trouble tapping accurately.

00:36:44.306 --> 00:36:46.006 A:middle
Definitely don't
go more than three.

00:36:46.006 --> 00:36:48.896 A:middle
It's highly unlikely that
more than three buttons side

00:36:48.896 --> 00:36:50.476 A:middle
by side is going to be usable,

00:36:50.626 --> 00:36:52.046 A:middle
and that will just
frustrate people.

00:36:52.666 --> 00:36:56.066 A:middle
So be generous with
your tap targets

00:36:56.516 --> 00:36:58.966 A:middle
because this is the one time
you want to make it easy

00:36:58.966 --> 00:37:00.896 A:middle
for someone to push
your buttons.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:36:58.966 --> 00:37:00.896 A:middle
for someone to push
your buttons.

00:37:01.396 --> 00:37:02.776 A:middle
It's Friday afternoon.

00:37:02.776 --> 00:37:03.986 A:middle
We are going for bad puns.

00:37:04.346 --> 00:37:08.496 A:middle
[Laughter] Next I'd like to
talk a little about legibility

00:37:08.916 --> 00:37:10.846 A:middle
because it is so
hard to use an app

00:37:10.846 --> 00:37:13.526 A:middle
if you can't actually read the
content it's displaying to you,

00:37:14.876 --> 00:37:17.826 A:middle
and when you are looking at
fonts in Photoshop or Sketch

00:37:17.826 --> 00:37:21.106 A:middle
or even the simulator, it's
easy to get a false sense

00:37:21.106 --> 00:37:23.186 A:middle
of how legible they are.

00:37:23.186 --> 00:37:24.476 A:middle
Again, you are sitting
at your desk,

00:37:24.826 --> 00:37:27.686 A:middle
you've got that nice big
display, you are probably

00:37:27.686 --> 00:37:30.036 A:middle
in some bright office lighting.

00:37:30.986 --> 00:37:32.816 A:middle
Something like this
might look totally fine.

00:37:33.356 --> 00:37:34.916 A:middle
But then once you
get it on the Watch,

00:37:34.916 --> 00:37:37.176 A:middle
it's going to look
more like this.

00:37:38.476 --> 00:37:39.466 A:middle
That's not legible.

00:37:40.126 --> 00:37:42.886 A:middle
Not at a glance,
at arm's distance

00:37:42.886 --> 00:37:46.576 A:middle
when you are moving on a train.

00:37:46.756 --> 00:37:48.736 A:middle
Larger type is going
to be easier to read.

00:37:48.736 --> 00:37:51.876 A:middle
And you don't just want to
look at this in Photoshop

00:37:51.876 --> 00:37:53.226 A:middle
or Sketch or the simulator.

00:37:53.566 --> 00:37:59.506 A:middle
You really need to look at your
apps in context on your wrist.

00:37:59.636 --> 00:38:02.906 A:middle
You need to make sure the most
important content is legible

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:37:59.636 --> 00:38:02.906 A:middle
You need to make sure the most
important content is legible

00:38:03.416 --> 00:38:05.566 A:middle
when the person's
going to be needing it.

00:38:05.566 --> 00:38:08.136 A:middle
Can you tell the important
information as you are rushing

00:38:08.136 --> 00:38:09.176 A:middle
out the door to catch a bus?

00:38:10.396 --> 00:38:12.356 A:middle
Or while you are
actively doing crunches?

00:38:12.356 --> 00:38:17.526 A:middle
How about if you are outside on
a sunny day actively running?

00:38:18.516 --> 00:38:20.176 A:middle
People need to quickly
be able to glance

00:38:20.176 --> 00:38:22.166 A:middle
and see the information
that they are looking for.

00:38:22.886 --> 00:38:26.936 A:middle
Now, to optimize legibility,
I strongly encourage you

00:38:26.936 --> 00:38:30.556 A:middle
to use SF Compact, the
system font for Apple Watch.

00:38:31.386 --> 00:38:33.606 A:middle
Custom fonts are
able to be used,

00:38:33.606 --> 00:38:37.866 A:middle
but even at reasonable sizes,
thinner fonts just aren't going

00:38:37.866 --> 00:38:40.506 A:middle
to be as legible as
San Francisco is.

00:38:41.106 --> 00:38:43.966 A:middle
And San Francisco was
specifically designed

00:38:44.036 --> 00:38:45.586 A:middle
to be the most legible font

00:38:45.586 --> 00:38:47.296 A:middle
for digital display
that we can make.

00:38:48.046 --> 00:38:51.346 A:middle
And I could go on and on
about all the care and detail

00:38:51.346 --> 00:38:54.496 A:middle
that went into crafting this
typeface, but it's better

00:38:54.496 --> 00:38:56.436 A:middle
if you hear it from
the type team directly,

00:38:56.806 --> 00:38:58.186 A:middle
and if you didn't
see the session

00:38:58.356 --> 00:38:59.746 A:middle
that was right before this one,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:00.186 --> 00:39:02.686 A:middle
I highly recommend
checking out the video.

00:39:02.686 --> 00:39:05.406 A:middle
It's really fantastic insight
into everything that went

00:39:05.406 --> 00:39:06.716 A:middle
into that typeface creation.

00:39:08.366 --> 00:39:11.136 A:middle
Now, the best way to
use the system font is

00:39:11.206 --> 00:39:13.026 A:middle
to use the system type styles

00:39:13.226 --> 00:39:17.086 A:middle
so that you can take
advantage of Dynamic Type.

00:39:17.306 --> 00:39:20.406 A:middle
Dynamic Type scales when
people adjust their preferred

00:39:20.406 --> 00:39:21.326 A:middle
reading size.

00:39:22.166 --> 00:39:27.226 A:middle
Now, if someone changes
their preferred reading size

00:39:27.226 --> 00:39:29.886 A:middle
and your app doesn't adjust
to match that preference,

00:39:30.486 --> 00:39:32.856 A:middle
they are either going to
be disappointed, or worse,

00:39:33.216 --> 00:39:35.306 A:middle
they may not be able
to use your app at all.

00:39:36.456 --> 00:39:38.816 A:middle
Implementing Dynamic
Type is straightforward.

00:39:39.196 --> 00:39:40.126 A:middle
You just need to use one

00:39:40.126 --> 00:39:42.396 A:middle
of the five text styles
that we have here.

00:39:43.046 --> 00:39:47.886 A:middle
And then for each text
setting that someone specifies,

00:39:48.316 --> 00:39:50.676 A:middle
the system will adjust
a number of properties

00:39:50.676 --> 00:39:54.296 A:middle
to ensure optimal legibility
and typographic integrity.

00:39:55.296 --> 00:40:00.816 A:middle
We adjust the size.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:39:55.296 --> 00:40:00.816 A:middle
We adjust the size.

00:40:01.036 --> 00:40:02.836 A:middle
We also adjust the leading.

00:40:03.676 --> 00:40:06.076 A:middle
So that's the vertical space
between the lines of text.

00:40:06.076 --> 00:40:08.526 A:middle
And we adjust the tracking,

00:40:08.526 --> 00:40:11.686 A:middle
which is the space
between the letters.

00:40:12.276 --> 00:40:17.656 A:middle
And if you are using a
custom font, you will have

00:40:17.656 --> 00:40:20.416 A:middle
to handle all of these
sizing adjustments manually.

00:40:21.226 --> 00:40:27.906 A:middle
Now, like I said, we do have
five styles, Headline, Body,

00:40:27.906 --> 00:40:30.046 A:middle
Caption 1, Caption
2, and Footnote.

00:40:31.176 --> 00:40:33.496 A:middle
It's called Footnote
for a reason.

00:40:34.396 --> 00:40:37.046 A:middle
Don't be tempted to use
that for every piece of text

00:40:37.106 --> 00:40:40.186 A:middle
in your app just because
it's the small one.

00:40:41.396 --> 00:40:44.746 A:middle
Bigger is better when
it comes to everything

00:40:44.746 --> 00:40:46.976 A:middle
on the Watch, especially fonts.

00:40:48.136 --> 00:40:51.936 A:middle
Now, as Mike was saying
earlier, we really strive

00:40:52.036 --> 00:40:54.556 A:middle
to blur the lines between
the hardware and the software

00:40:54.556 --> 00:40:58.736 A:middle
when it comes to Apple Watch,
and nothing wrecks that faster

00:40:58.736 --> 00:41:01.566 A:middle
than gratuitously
bright background colors

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:40:58.736 --> 00:41:01.566 A:middle
than gratuitously
bright background colors

00:41:01.646 --> 00:41:03.296 A:middle
and unnecessary padding.

00:41:04.986 --> 00:41:07.326 A:middle
Suddenly the screen feels tiny,

00:41:07.326 --> 00:41:09.306 A:middle
and everything is
cramped into the center.

00:41:10.436 --> 00:41:12.676 A:middle
You are already dealing
with a small screen.

00:41:12.676 --> 00:41:16.016 A:middle
You need to use every precious
pixel of that for your content.

00:41:16.676 --> 00:41:19.686 A:middle
Don't waste it on padding.

00:41:19.686 --> 00:41:23.036 A:middle
And bright backgrounds are
the worst because the majority

00:41:23.036 --> 00:41:25.376 A:middle
of the platform is on black, so
you are going to get this blast

00:41:25.516 --> 00:41:29.736 A:middle
of color, and you can't
change the background color

00:41:29.736 --> 00:41:32.366 A:middle
of the status bar, so it's
always going to be black,

00:41:32.736 --> 00:41:34.626 A:middle
which means that your
content area is going

00:41:34.626 --> 00:41:35.906 A:middle
to look even smaller.

00:41:37.696 --> 00:41:40.446 A:middle
And I also see a lot of
people putting photos

00:41:40.446 --> 00:41:43.046 A:middle
in the background just to
kind of jazz up their app,

00:41:43.966 --> 00:41:47.846 A:middle
and while this can be done
well, more often than not,

00:41:48.146 --> 00:41:49.976 A:middle
it's a distraction
from the content.

00:41:51.186 --> 00:41:53.776 A:middle
It increases your file size
because you need more images,

00:41:53.776 --> 00:41:57.416 A:middle
which affects your launch times,
like Mike was talking about,

00:41:58.196 --> 00:42:00.376 A:middle
and it makes the
text harder to read.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:41:58.196 --> 00:42:00.376 A:middle
and it makes the
text harder to read.

00:42:01.146 --> 00:42:02.196 A:middle
Again, you are dealing

00:42:02.196 --> 00:42:04.836 A:middle
with these incredibly
short interaction times,

00:42:05.266 --> 00:42:06.986 A:middle
so you want to eliminate
any friction

00:42:06.986 --> 00:42:08.466 A:middle
to interaction that you can.

00:42:09.226 --> 00:42:11.776 A:middle
Fractions of seconds have
never been so valuable

00:42:11.776 --> 00:42:14.836 A:middle
as they are on the Watch.

00:42:15.036 --> 00:42:18.486 A:middle
And while this lack of padding
is very uncomfortable to look

00:42:18.486 --> 00:42:22.886 A:middle
at in Photoshop, it does make
me cringe, everything is going

00:42:22.886 --> 00:42:24.486 A:middle
to be great when you
get it to the Watch

00:42:24.556 --> 00:42:26.046 A:middle
because of that hardware bezel.

00:42:26.606 --> 00:42:28.626 A:middle
The bezel is the
illusion of padding.

00:42:29.386 --> 00:42:31.396 A:middle
So this means you don't
need to add any in.

00:42:31.576 --> 00:42:34.876 A:middle
You can use all of the screen
real estate for content

00:42:34.876 --> 00:42:37.916 A:middle
and controls, and you
will have less truncation

00:42:37.916 --> 00:42:40.796 A:middle
and text wrapping that way.

00:42:40.796 --> 00:42:42.406 A:middle
And like I mentioned
a few minutes ago,

00:42:42.406 --> 00:42:45.286 A:middle
buttons that go edge to edge are
going to be much easier to tap.

00:42:46.346 --> 00:42:48.506 A:middle
If your app has a
black background,

00:42:48.576 --> 00:42:51.366 A:middle
it's going to blend seamlessly
into that bezel and feel

00:42:51.366 --> 00:42:52.596 A:middle
at home on the hardware.

00:42:54.026 --> 00:42:56.556 A:middle
It will be so much
easier for people to focus

00:42:56.616 --> 00:42:59.076 A:middle
on your content of your app.

00:42:59.076 --> 00:43:01.956 A:middle
But this doesn't mean you
have to make your app boring.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:42:59.076 --> 00:43:01.956 A:middle
But this doesn't mean you
have to make your app boring.

00:43:02.696 --> 00:43:05.306 A:middle
There are so many ways
to carry over branding

00:43:05.306 --> 00:43:08.736 A:middle
and add personality without
relying on a colored background.

00:43:09.576 --> 00:43:11.936 A:middle
I've got a few great
examples for you.

00:43:11.936 --> 00:43:16.076 A:middle
Hailo is one, a popular
taxi app in the UK.

00:43:16.076 --> 00:43:18.746 A:middle
They have this recognizable
bright yellow color

00:43:18.956 --> 00:43:22.126 A:middle
and cheery car icon you see
throughout all of their app.

00:43:24.456 --> 00:43:28.076 A:middle
Citymapper relies on their green
color for branding recognition.

00:43:28.796 --> 00:43:31.526 A:middle
They have the Citymapper
face that they use

00:43:31.526 --> 00:43:34.066 A:middle
as loading graphics,
but most importantly,

00:43:34.356 --> 00:43:36.476 A:middle
they carry over their
cheeky sense of humor

00:43:36.476 --> 00:43:37.366 A:middle
that they are known for.

00:43:37.366 --> 00:43:40.816 A:middle
Next time you guys need
directions someplace,

00:43:40.816 --> 00:43:43.456 A:middle
I highly recommend checking
out the teleport option.

00:43:43.456 --> 00:43:47.846 A:middle
Rules! is a really
fun memory game,

00:43:48.306 --> 00:43:50.646 A:middle
and they took the
background texture

00:43:50.686 --> 00:43:53.766 A:middle
that they use throughout their
iPhone app, and they've turned

00:43:53.806 --> 00:43:56.406 A:middle
that into the button
texture here on Apple Watch,

00:43:57.166 --> 00:44:00.426 A:middle
and they also have these
really adorable characters

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:43:57.166 --> 00:44:00.426 A:middle
and they also have these
really adorable characters

00:44:00.426 --> 00:44:03.156 A:middle
and charming animations,
so there's no way

00:44:03.156 --> 00:44:04.706 A:middle
that you could call
this app boring

00:44:04.706 --> 00:44:07.126 A:middle
or confuse it with
some other app.

00:44:10.956 --> 00:44:16.136 A:middle
So there's no need to do
anything like this when you have

00:44:16.206 --> 00:44:18.596 A:middle
so many better options
available to you.

00:44:19.826 --> 00:44:22.436 A:middle
So avoid those bright
backgrounds for embellishment,

00:44:22.916 --> 00:44:24.316 A:middle
and never inset your content.

00:44:24.486 --> 00:44:27.586 A:middle
Let the hardware bezel
take care of that for you.

00:44:30.396 --> 00:44:34.556 A:middle
But really, none of
these things matter

00:44:34.556 --> 00:44:38.996 A:middle
if people can't find your
app in the first place.

00:44:39.726 --> 00:44:43.346 A:middle
Now, unlike iOS, Apple
Watch icons aren't labeled.

00:44:43.696 --> 00:44:45.526 A:middle
So it's especially important

00:44:45.526 --> 00:44:48.096 A:middle
that people can find your
app just from the icon.

00:44:48.956 --> 00:44:51.016 A:middle
And as you've undoubtedly
noticed,

00:44:51.246 --> 00:44:55.126 A:middle
the Watch App icons are
circular and much, much smaller.

00:44:55.856 --> 00:45:00.476 A:middle
So that can present some
design challenges as well.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:44:55.856 --> 00:45:00.476 A:middle
So that can present some
design challenges as well.

00:45:00.676 --> 00:45:05.036 A:middle
Now, most of these Watch App
icons would be familiar to you

00:45:05.036 --> 00:45:07.056 A:middle
if you have their iPhone
apps on your phone.

00:45:09.116 --> 00:45:12.066 A:middle
Making an exact match
of your Apple Watch icon

00:45:12.316 --> 00:45:14.476 A:middle
to your iOS icon is the best way

00:45:14.476 --> 00:45:19.336 A:middle
to help people find
it on the Watch.

00:45:19.536 --> 00:45:22.586 A:middle
Citymapper and Nike+ Running

00:45:22.706 --> 00:45:26.496 A:middle
and Procreate all directly
translated their App Icons

00:45:26.496 --> 00:45:28.656 A:middle
for the Apple Watch, and that's

00:45:28.656 --> 00:45:30.456 A:middle
because they already
had very simple shapes

00:45:30.456 --> 00:45:32.416 A:middle
that would read well in
that circular format.

00:45:33.526 --> 00:45:35.716 A:middle
But I know it's not
always that easy,

00:45:36.296 --> 00:45:38.936 A:middle
so I have some techniques
you can try if you need

00:45:38.936 --> 00:45:42.526 A:middle
to make modifications to get
your App icon to read well

00:45:42.766 --> 00:45:45.186 A:middle
in a small circle and
still be recognizable.

00:45:46.846 --> 00:45:48.216 A:middle
The first thing to do, really,

00:45:48.216 --> 00:45:50.866 A:middle
is just simplify as
much as possible.

00:45:51.186 --> 00:45:54.416 A:middle
So what can be removed
and still be recognizable

00:45:54.416 --> 00:45:56.386 A:middle
as your brand in your app?

00:45:57.036 --> 00:45:58.046 A:middle
Start with text.

00:45:58.546 --> 00:46:02.466 A:middle
Text is going to be particularly
tough at such small sizes.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:45:58.546 --> 00:46:02.466 A:middle
Text is going to be particularly
tough at such small sizes.

00:46:02.896 --> 00:46:04.796 A:middle
So can you eliminate
it altogether?

00:46:05.956 --> 00:46:07.076 A:middle
That's what Yelp did.

00:46:07.906 --> 00:46:10.996 A:middle
Their burst icon and their
signature red color is enough

00:46:10.996 --> 00:46:15.616 A:middle
to make the app recognizable.

00:46:15.616 --> 00:46:18.816 A:middle
So start by removing the text,
or if you absolutely can't,

00:46:18.996 --> 00:46:20.096 A:middle
look for an abbreviation.

00:46:20.096 --> 00:46:24.566 A:middle
And if you have a lot
of detail in your icon,

00:46:24.566 --> 00:46:28.666 A:middle
consider simplifying it because
that will help it be much easier

00:46:28.666 --> 00:46:30.186 A:middle
to read at those small sizes.

00:46:30.706 --> 00:46:35.136 A:middle
Take the Twitterific bird,
which many of us recognize.

00:46:36.336 --> 00:46:39.606 A:middle
Just scaling it down and masking
it into a circle wasn't going

00:46:39.606 --> 00:46:41.266 A:middle
to work very well
on the Apple Watch.

00:46:41.886 --> 00:46:45.656 A:middle
The white space becomes awkward,
and the bird is just not

00:46:45.656 --> 00:46:46.826 A:middle
as recognizable this way.

00:46:46.826 --> 00:46:51.716 A:middle
So the Iconfactory team
redrew the bird to work better

00:46:51.716 --> 00:46:53.206 A:middle
in the small circular format.

00:46:53.966 --> 00:46:55.926 A:middle
Now he is facing you dead on,

00:46:56.606 --> 00:46:59.176 A:middle
and a lot of the features have
been simplified or removed.

00:46:59.176 --> 00:47:03.016 A:middle
It's no longer got nostrils
on the beak, and the pupils

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:46:59.176 --> 00:47:03.016 A:middle
It's no longer got nostrils
on the beak, and the pupils

00:47:03.016 --> 00:47:07.126 A:middle
and the eyebrows are much
simpler graphically rendered.

00:47:07.936 --> 00:47:11.876 A:middle
Complex shapes with a lot of
detail will be harder it see

00:47:11.876 --> 00:47:17.186 A:middle
at small sizes, so do
everything you can to simplify.

00:47:17.256 --> 00:47:20.876 A:middle
Now, unless you have a strong
justification for moving away

00:47:20.876 --> 00:47:22.276 A:middle
from your current color palette,

00:47:22.856 --> 00:47:24.816 A:middle
you want to retain your
current color scheme

00:47:24.816 --> 00:47:26.006 A:middle
and overall visual style.

00:47:27.276 --> 00:47:29.826 A:middle
Color is a very strong
branding element,

00:47:30.076 --> 00:47:32.016 A:middle
and that will be very important

00:47:32.016 --> 00:47:35.946 A:middle
in helping people
find your App icon.

00:47:36.166 --> 00:47:39.336 A:middle
What if messages were
suddenly a different color?

00:47:40.896 --> 00:47:43.746 A:middle
You would probably think this
is a different app altogether,

00:47:44.246 --> 00:47:46.436 A:middle
or a beta version,
or a trial version.

00:47:48.026 --> 00:47:51.786 A:middle
So here you can see how
Fanatee simplified the App icon

00:47:51.786 --> 00:47:53.186 A:middle
for their game, Letter Zap.

00:47:54.716 --> 00:47:57.326 A:middle
They removed the text, which
would have been impossible

00:47:57.326 --> 00:47:59.256 A:middle
to read at the small
size on the Watch,

00:47:59.376 --> 00:48:03.126 A:middle
and enlarged the lightning
bolt, but most importantly,

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:47:59.376 --> 00:48:03.126 A:middle
and enlarged the lightning
bolt, but most importantly,

00:48:03.126 --> 00:48:05.266 A:middle
they retained that green
and gold color scheme,

00:48:05.266 --> 00:48:07.386 A:middle
which is what makes
it so recognizable.

00:48:08.366 --> 00:48:13.726 A:middle
So even though it might seem
scary to remove text or change

00:48:13.726 --> 00:48:16.146 A:middle
that icon that you have
been using for so long,

00:48:16.456 --> 00:48:20.056 A:middle
as long as you retain the
overall color and visual style

00:48:20.056 --> 00:48:23.156 A:middle
of your App icon, it's still
going to be recognizable.

00:48:25.156 --> 00:48:28.526 A:middle
Now, as Mike said
earlier, it is not a goal

00:48:28.526 --> 00:48:31.816 A:middle
to offer all the
functionality of your iPhone app

00:48:31.816 --> 00:48:36.446 A:middle
onto the Watch, so sometimes
using an identical App icon may

00:48:36.446 --> 00:48:37.536 A:middle
not be appropriate.

00:48:38.616 --> 00:48:41.656 A:middle
Your Watch app might offer
complementary functions

00:48:41.656 --> 00:48:46.066 A:middle
to your iPhone, so maybe a
complementary Watch App icon

00:48:46.136 --> 00:48:47.346 A:middle
concept might be better.

00:48:49.476 --> 00:48:52.536 A:middle
As we were talking about
earlier, the Camera app

00:48:52.536 --> 00:48:55.166 A:middle
on the iPhone offers a
ton of functionality.

00:48:55.166 --> 00:48:57.246 A:middle
You can take pictures,
edit them, share them.

00:48:58.036 --> 00:49:00.706 A:middle
But on the Watch, it
really just acts as a remote

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:48:58.036 --> 00:49:00.706 A:middle
But on the Watch, it
really just acts as a remote

00:49:00.706 --> 00:49:01.676 A:middle
for the shutter button.

00:49:03.176 --> 00:49:06.086 A:middle
So we could have taken this App
icon and just put it in a circle

00:49:06.086 --> 00:49:10.006 A:middle
and called it done, but
it didn't feel right.

00:49:10.226 --> 00:49:12.976 A:middle
Instead, we came up with
a complementary concept.

00:49:13.956 --> 00:49:18.036 A:middle
It's still a recognizable Camera
icon, but we've simplified some

00:49:18.036 --> 00:49:20.846 A:middle
of the texture, retained
the color scheme,

00:49:21.196 --> 00:49:23.326 A:middle
and really emphasized
the shutter button

00:49:23.326 --> 00:49:25.186 A:middle
because that's what
this app does for you.

00:49:25.606 --> 00:49:28.816 A:middle
It presses the shutter button.

00:49:29.386 --> 00:49:31.916 A:middle
Another great example
of this is Sky Guide.

00:49:33.176 --> 00:49:35.216 A:middle
Now, masking their icon

00:49:35.266 --> 00:49:37.526 A:middle
into a circle just
doesn't read very well.

00:49:37.526 --> 00:49:42.376 A:middle
The composition is off, and
it doesn't exactly feel right

00:49:42.376 --> 00:49:43.866 A:middle
because of what the
app does for you.

00:49:43.866 --> 00:49:46.966 A:middle
On the iPhone, Sky Guide is all

00:49:46.966 --> 00:49:49.246 A:middle
about telling you,
What am I looking at?

00:49:49.386 --> 00:49:51.466 A:middle
What am I seeing
right now in the sky?

00:49:52.346 --> 00:49:54.946 A:middle
But on the Watch, it's
alerting you when there's

00:49:54.946 --> 00:49:57.016 A:middle
about to be an event
in your area,

00:49:57.496 --> 00:49:59.546 A:middle
like the International
Space Station might be

00:49:59.546 --> 00:50:01.246 A:middle
about to fly overhead.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:49:59.546 --> 00:50:01.246 A:middle
about to fly overhead.

00:50:02.296 --> 00:50:05.176 A:middle
So they came up with a
complementary concept

00:50:05.176 --> 00:50:08.946 A:middle
for their App icon, and
it looks great in a circle

00:50:08.946 --> 00:50:11.746 A:middle
and implies an astronomical
event.

00:50:12.436 --> 00:50:15.446 A:middle
But because they're using
similar color scheme

00:50:15.446 --> 00:50:18.296 A:middle
and visual style, the
relationship is very clear.

00:50:19.026 --> 00:50:23.126 A:middle
So if you are struggling
how to adapt your iOS icon

00:50:23.126 --> 00:50:25.316 A:middle
for Apple Watch, try
some of these approaches.

00:50:26.426 --> 00:50:29.876 A:middle
Because none of these Apple
Watch icons are literally the

00:50:29.946 --> 00:50:34.046 A:middle
same as their iOS counterparts,
but the resemblance is clear,

00:50:34.046 --> 00:50:36.656 A:middle
and as a result, the
apps are easy to find.

00:50:37.676 --> 00:50:42.586 A:middle
And as I've said many times, it
is not necessary for your Watch

00:50:42.586 --> 00:50:46.906 A:middle
and iOS icons to be identical
twins, but you do want them

00:50:46.906 --> 00:50:48.036 A:middle
to look like siblings.

00:50:48.586 --> 00:50:54.606 A:middle
So that takes us to the end of
our list, and as you're working

00:50:54.606 --> 00:50:58.656 A:middle
on your Watch apps, I hope this
will be a handy tool for you

00:50:58.656 --> 00:51:01.956 A:middle
so you can avoid some of those
common usability pitfalls.

WEBVTT
X-TIMESTAMP-MAP=MPEGTS:181083,LOCAL:00:00:00.000

00:50:58.656 --> 00:51:01.956 A:middle
so you can avoid some of those
common usability pitfalls.

00:51:02.746 --> 00:51:04.576 A:middle
It really has been
amazing for us

00:51:04.676 --> 00:51:07.976 A:middle
to see how many great Watch
apps are out there already,

00:51:07.976 --> 00:51:10.526 A:middle
and we're so excited to
see what you guys come

00:51:10.526 --> 00:51:12.006 A:middle
up with for watchOS 2.

00:51:13.556 --> 00:51:16.376 A:middle
We had a ton of great
design sessions this week,

00:51:16.496 --> 00:51:18.306 A:middle
and the WatchKit Tips
and Tricks, again,

00:51:18.476 --> 00:51:20.906 A:middle
from this morning was
particularly fantastic.

00:51:21.546 --> 00:51:23.956 A:middle
And loads of information online,

00:51:24.076 --> 00:51:26.216 A:middle
especially the Designing
Great Apps page.

00:51:26.976 --> 00:51:29.856 A:middle
It has been a tremendous week.

00:51:29.856 --> 00:51:32.936 A:middle
I hope you guys have had
as much fun as we have.

00:51:33.346 --> 00:51:35.556 A:middle
There's still a few
more hours of labs left,

00:51:35.876 --> 00:51:37.426 A:middle
so go take full advantage
of that,

00:51:37.746 --> 00:51:39.286 A:middle
and we'll see you next year.

00:51:39.286 --> 00:51:39.786 A:middle
Thank you.

00:51:40.516 --> 00:51:43.500 A:middle
[Applause]

